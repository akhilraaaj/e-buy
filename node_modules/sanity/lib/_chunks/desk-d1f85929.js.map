{"version":3,"file":"desk-d1f85929.js","sources":["../../src/desk/components/DocTitle.tsx","../../src/desk/components/TimeAgo.tsx","../../src/desk/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/desk/components/PublishedStatus.tsx","../../src/desk/components/DraftStatus.tsx","../../src/desk/components/paneItem/PaneItemPreview.tsx","../../src/desk/components/paneRouter/PaneRouterContext.tsx","../../src/desk/components/paneRouter/BackLink.tsx","../../src/desk/components/paneRouter/ChildLink.tsx","../../src/desk/components/paneRouter/ReferenceChildLink.tsx","../../src/desk/components/paneRouter/ParameterizedLink.tsx","../../src/desk/components/paneRouter/usePaneRouter.ts","../../src/desk/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/desk/components/confirmDeleteDialog/index.tsx","../../src/desk/components/pane/PaneContextMenuButton.tsx","../../src/desk/components/pane/constants.ts","../../src/desk/components/pane/PaneContext.ts","../../src/desk/components/pane/PaneLayoutContext.ts","../../src/desk/components/pane/usePaneLayout.ts","../../src/desk/components/pane/PaneDivider.tsx","../../src/desk/components/pane/Pane.tsx","../../src/desk/components/pane/usePane.ts","../../src/desk/components/pane/PaneContent.styles.tsx","../../src/desk/components/pane/PaneContent.tsx","../../src/desk/components/pane/PaneFooter.styles.tsx","../../src/desk/components/pane/PaneFooter.tsx","../../src/desk/components/pane/PaneHeader.styles.tsx","../../src/desk/components/pane/PaneHeader.tsx","../../src/desk/components/pane/PaneLayout.styles.tsx","../../src/desk/components/IntentButton.tsx","../../src/desk/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/desk/documentActions/DeleteAction.tsx","../../src/desk/documentActions/DiscardChangesAction.tsx","../../src/desk/documentActions/DuplicateAction.tsx","../../src/desk/documentActions/HistoryRestoreAction.tsx","../../src/desk/panes/document/DocumentPaneContext.ts","../../src/desk/panes/document/useDocumentPane.tsx","../../src/desk/documentActions/PublishAction.tsx","../../src/desk/documentActions/UnpublishAction.tsx","../../src/desk/documentBadges/LiveEditBadge.ts","../../src/desk/constants.ts","../../src/desk/getIntentState.ts","../../src/desk/router.ts","../../src/desk/deskTool.ts","../../src/desk/DeskToolContext.ts","../../src/desk/structureBuilder/SerializeError.ts","../../src/desk/structureBuilder/util/getExtendedProjection.ts","../../src/desk/structureBuilder/Sort.ts","../../src/desk/structureBuilder/MenuItem.ts","../../src/desk/structureBuilder/MenuItemGroup.ts","../../src/desk/structureBuilder/util/validateId.ts","../../src/desk/structureBuilder/util/getStructureNodeId.ts","../../src/desk/structureBuilder/Component.ts","../../src/desk/structureBuilder/util/resolveTypeForDocument.ts","../../src/desk/structureBuilder/views/View.ts","../../src/desk/structureBuilder/views/ComponentView.ts","../../src/desk/structureBuilder/views/FormView.ts","../../src/desk/structureBuilder/views/index.ts","../../src/desk/structureBuilder/Document.ts","../../src/desk/structureBuilder/Layout.ts","../../src/desk/structureBuilder/Intent.ts","../../src/desk/structureBuilder/InitialValueTemplateItem.ts","../../src/desk/structureBuilder/GenericList.ts","../../src/desk/structureBuilder/DocumentList.ts","../../src/desk/structureBuilder/List.ts","../../src/desk/structureBuilder/ListItem.ts","../../src/desk/structureBuilder/DocumentListItem.ts","../../src/desk/structureBuilder/DocumentTypeList.ts","../../src/desk/structureBuilder/documentTypeListItems.ts","../../src/desk/structureBuilder/createStructureBuilder.ts","../../src/desk/DeskToolProvider.tsx"],"sourcesContent":["import {SanityDocumentLike} from '@sanity/types'\nimport React from 'react'\nimport {useSchema, unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>Unknown schema type: {documentValue._type}</code>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n","import React from 'react'\nimport {useTimeAgo} from 'sanity'\n\nexport interface TimeAgoProps {\n  time: string | Date\n}\n\nexport function TimeAgo({time}: TimeAgoProps) {\n  const timeAgo = useTimeAgo(time)\n\n  return <span title={timeAgo}>{timeAgo} ago</span>\n}\n","import {useMemo} from 'react'\nimport {ClientError, SanityClient} from '@sanity/client'\nimport {Observable, timer, fromEvent, EMPTY, of} from 'rxjs'\nimport {\n  map,\n  startWith,\n  distinctUntilChanged,\n  switchMap,\n  shareReplay,\n  catchError,\n} from 'rxjs/operators'\nimport {\n  AvailabilityResponse,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentStore,\n  useDocumentStore,\n  createHookFromObservableFactory,\n  getDraftId,\n  getPublishedId,\n  useClient,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY\n      ),\n      shareReplay({refCount: true, bufferSize: 1})\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient}\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    })\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient}\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          })\n        )\n    })\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000}\n    ) as Observable<ReferringDocuments['internalReferences']>\n  }\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        })\n      )\n    )\n  }\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId])\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient])\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean)\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== '')\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string'\n      )\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import React from 'react'\nimport {PublishIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function PublishedStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Published {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>Not published</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"positive\" dimmed={!document} muted={!document} size={1}>\n        <PublishIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import React from 'react'\nimport {EditIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function DraftStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Edited {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>No unpublished edits</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"caution\" dimmed={!document} muted={!document} size={1}>\n        <EditIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import type {SanityDocument, SchemaType} from '@sanity/types'\nimport React, {isValidElement} from 'react'\nimport {isNumber, isString} from 'lodash'\nimport {Inline} from '@sanity/ui'\nimport {useMemoObservable} from 'react-rx'\nimport {PublishedStatus} from '../PublishedStatus'\nimport {DraftStatus} from '../DraftStatus'\nimport type {PaneItemPreviewState} from './types'\nimport {\n  DocumentPresence,\n  DocumentPreviewPresence,\n  DocumentPreviewStore,\n  GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  isRecord,\n} from 'sanity'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: React.ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title]\n  )!\n\n  const status = isLoading ? null : (\n    <Inline space={4}>\n      {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n      <PublishedStatus document={published} />\n      <DraftStatus document={draft} />\n    </Inline>\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n    />\n  )\n}\n","import {createContext} from 'react'\nimport {PaneRouterContextValue} from './types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {BackLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as React.ComponentType<BackLinkProps>\n","import React, {forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ChildLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import React, {forwardRef} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {useUnique} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: React.ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {PaneRouterContextValue} from './types'\n\n/**\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import React, {useCallback} from 'react'\nimport type {SanityDocument, SchemaType} from '@sanity/types'\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\nimport {\n  FIXME,\n  PreviewCard,\n  getPublishedId,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: React.ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id]\n  )\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      onClick={onClick}\n      padding={2}\n      radius={2}\n    >\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"default\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {rem, Flex, Text, Card, Box, Tooltip, Container, Inline} from '@sanity/ui'\nimport {InfoOutlineIcon} from '@sanity/icons'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const TableContainer = styled(Box).attrs({paddingX: 2, paddingBottom: 2})`\n  overflow: auto;\n  max-height: 150px;\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  thead > tr {\n    position: sticky;\n    top: 0;\n    background: var(--card-bg-color);\n    z-index: 1;\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 35px;\n`\n\nexport const ReferencesCard = styled(Card).attrs({\n  radius: 2,\n  shadow: 1,\n  marginBottom: 4,\n  flex: 'auto',\n})`\n  overflow: hidden;\n  min-height: 150px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Inline space={2}>\n      <Text size={1} muted>\n        {difference} other reference{difference === 1 ? '' : 's'} not shown{' '}\n      </Text>\n\n      <Tooltip\n        portal\n        placement=\"top\"\n        content={\n          <Container width={0}>\n            <Box padding={2}>\n              <Text size={1}>\n                We can't show metadata about these references because no token with access to the\n                datasets they are in was found.\n              </Text>\n            </Box>\n          </Container>\n        }\n      >\n        <Text size={1} muted>\n          <InfoOutlineIcon />\n        </Text>\n      </Tooltip>\n    </Inline>\n  )\n}\n","import React, {useCallback} from 'react'\nimport {\n  WarningOutlineIcon,\n  DocumentsIcon,\n  ClipboardIcon,\n  UnknownIcon,\n  ChevronDownIcon,\n} from '@sanity/icons'\nimport {useToast, Text, Box, Button, Flex, Label, Card, Stack} from '@sanity/ui'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {ReferringDocuments} from './useReferringDocuments'\nimport {\n  ReferencesCard,\n  OtherReferenceCount,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  TableContainer,\n  Table,\n  ChevronWrapper,\n  DocumentIdFlex,\n} from './ConfirmDeleteDialogBody.styles'\nimport {SanityDefaultPreview, useSchema} from 'sanity'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: string\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title=\"Preview Unavailable\"\n            subtitle={`ID: ${item._id}`}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, onReferenceLinkClick]\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\">\n        Are you sure you want to {action} <strong>“{documentTitle}”</strong>?\n      </Text>\n    )\n  }\n\n  const documentCount =\n    crossDatasetReferences.totalCount === 1\n      ? '1 document'\n      : `${crossDatasetReferences.totalCount.toLocaleString()} documents`\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n  const datasetsCount =\n    normalizedDatasetNames.length === 1\n      ? 'another dataset'\n      : `${normalizedDatasetNames.length} datasets`\n\n  let datasetNameList = `Dataset${\n    normalizedDatasetNames.length === 1 ? '' : 's'\n  }: ${normalizedDatasetNames.join(', ')}`\n\n  // We only have one dataset, and it is unavailable due to permissions\n  if (hasUnknownDatasetNames && normalizedDatasetNames.length === 1) {\n    datasetNameList = 'Unavailable dataset'\n  }\n\n  return (\n    <>\n      <Card padding={3} radius={2} tone=\"caution\" marginBottom={4} flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              {totalCount === 1 ? (\n                <>1 document refers to “{documentTitle}”</>\n              ) : (\n                <>\n                  {totalCount.toLocaleString()} documents refer to “{documentTitle}”\n                </>\n              )}\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n\n      <Box flex=\"none\" marginBottom={4}>\n        <Text>\n          You may not be able to {action} “{documentTitle}” because the following documents refer to\n          it:\n        </Text>\n      </Box>\n\n      <ReferencesCard>\n        <Flex direction=\"column\" height=\"fill\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" padding={3} space={3} overflow=\"auto\" data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Flex padding={4} align=\"center\">\n                  <Box marginRight={4}>\n                    <Text size={3}>\n                      <DocumentsIcon />\n                    </Text>\n                  </Box>\n                  <Flex marginRight={4} direction=\"column\">\n                    <Box marginBottom={2}>\n                      <Text>\n                        {documentCount} in {datasetsCount}\n                      </Text>\n                    </Box>\n                    <Box>\n                      <Text title={datasetNameList} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetNameList}\n                      </Text>\n                    </Box>\n                  </Flex>\n                  <ChevronWrapper>\n                    <Text muted>\n                      <ChevronDownIcon />\n                    </Text>\n                  </ChevronWrapper>\n                </Flex>\n              </CrossDatasetReferencesSummary>\n\n              <TableContainer>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Label muted size={0}>\n                          Project ID\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Dataset\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Document ID\n                        </Label>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    // TODO: this isn't visible with the dialog open\n                                    toast.push({\n                                      title: 'Copied document ID to clipboard!',\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    title=\"Copy ID to clipboard\"\n                                    mode=\"bleed\"\n                                    icon={ClipboardIcon}\n                                    fontSize={0}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n                <Box padding={2}>\n                  <OtherReferenceCount {...crossDatasetReferences} />\n                </Box>\n              </TableContainer>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </ReferencesCard>\n\n      <Box flex=\"none\">\n        <Text>\n          If you {action} this document, documents that refer to it will no longer be able to access\n          it.\n        </Text>\n      </Box>\n    </>\n  )\n}\n","import React, {useMemo, useId} from 'react'\nimport styled from 'styled-components'\nimport {Box, Dialog, Button, Text, Spinner, Grid, Flex} from '@sanity/ui'\nimport {DocTitle} from '../DocTitle'\nimport {useReferringDocuments} from './useReferringDocuments'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\n\n/** @internal */\nexport const DialogBody = styled(Flex).attrs({\n  padding: 4,\n  direction: 'column',\n  height: 'fill',\n})`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 300px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: string\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const capitalizedAction = `${action.substring(0, 1).toUpperCase()}${action.substring(1)}`\n\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={`${capitalizedAction} document?`}\n      footer={\n        <Grid columns={showConfirmButton ? 2 : 1} gap={2} paddingX={4} paddingY={3}>\n          <Button mode=\"ghost\" onClick={onCancel} text=\"Cancel\" />\n\n          {showConfirmButton && (\n            <Button\n              data-testid=\"confirm-delete-button\"\n              text={totalCount > 0 ? `${capitalizedAction} anyway` : `${capitalizedAction} now`}\n              tone=\"critical\"\n              onClick={onConfirm}\n            />\n          )}\n        </Grid>\n      }\n      onClose={onCancel}\n      onClickOutside={onCancel}\n      // Custom portal element configured in `DocumentPane` so that the dialog is scoped to the current pane\n      portal=\"documentPanelPortalElement\"\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <Spinner muted />\n            <Box marginTop={3}>\n              <Text align=\"center\" muted size={1}>\n                Looking for referring documents…\n              </Text>\n            </Box>\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import React, {useCallback, useState, useId} from 'react'\nimport {Box, Flex, Button, Dialog, Text, ErrorBoundary} from '@sanity/ui'\nimport {ConfirmDeleteDialog, ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<React.ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header=\"Error\"\n      footer={\n        <Flex paddingX={4} paddingY={3} direction=\"column\">\n          <Button mode=\"ghost\" text=\"Retry\" onClick={handleRetry} />\n        </Flex>\n      }\n      onClose={props.onCancel}\n      // Custom portal element configured in `DocumentPane` so that the dialog is scoped to the current pane\n      portal=\"documentPanelPortalElement\"\n    >\n      <Box padding={4}>\n        <Text>An error occurred while loading referencing documents.</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {EllipsisVerticalIcon} from '@sanity/icons'\nimport {Box, Button, Label, Menu, MenuButton, MenuDivider, MenuItem, PopoverProps} from '@sanity/ui'\nimport React, {forwardRef, Fragment, useCallback, useMemo, useId} from 'react'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {IntentLink} from 'sanity/router'\n\ninterface PaneContextMenuButtonProps {\n  items: PaneMenuItem[]\n  itemGroups?: PaneMenuItemGroup[]\n  onAction: (action: PaneMenuItem) => void\n}\n\ninterface MenuItemGroup {\n  id: string\n  title?: React.ReactNode\n  items: PaneMenuItem[]\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n  width: 0,\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {items, itemGroups, onAction} = props\n  const id = useId()\n\n  const groups = useMemo(() => {\n    if (!itemGroups || itemGroups.length === 0) {\n      return [{id: '$default', items}]\n    }\n\n    const defaultGroup: MenuItemGroup = {id: '$default', items: []}\n\n    const groupMap = itemGroups.reduce((acc: Record<string, MenuItemGroup>, group) => {\n      acc[group.id] = {id: group.id, title: group.title, items: []}\n      return acc\n    }, {})\n\n    for (const item of items) {\n      const group = groupMap[item.group || '$default'] || defaultGroup\n\n      group.items.push(item)\n    }\n\n    return Object.values(groupMap)\n      .concat([defaultGroup])\n      .filter((g) => g.items.length > 0)\n  }, [items, itemGroups])\n\n  return (\n    <MenuButton\n      button={<Button icon={EllipsisVerticalIcon} mode=\"bleed\" padding={3} title=\"Show menu\" />}\n      id={id}\n      menu={\n        <Menu>\n          {groups.map((group, groupIndex) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Fragment key={groupIndex}>\n              {groupIndex > 0 && <MenuDivider />}\n              {group.title && (\n                <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n                  <Label muted>{group.title}</Label>\n                </Box>\n              )}\n              {group.items.map((item, itemIndex) => (\n                <PaneContextMenuItem\n                  item={item}\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${itemIndex}-${item.title}`}\n                  onAction={onAction}\n                />\n              ))}\n            </Fragment>\n          ))}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n\nfunction PaneContextMenuItem(props: {\n  item: PaneMenuItem\n  onAction: (action: PaneMenuItem) => void\n}) {\n  const {item, onAction} = props\n\n  const handleClick = useCallback(() => {\n    onAction(item)\n  }, [item, onAction])\n\n  const hotkeys = useMemo(() => {\n    if (!item.shortcut) return undefined\n\n    return item.shortcut.split('+')\n  }, [item])\n\n  const IntentButtonOrActionButton = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n    item.intent ? (\n      <IntentLink\n        {...linkProps}\n        intent={item.intent.type}\n        params={item.intent.params}\n        ref={linkRef}\n      />\n    ) : (\n      <MenuItem {...linkProps} pressed={item.selected} />\n    )\n  )\n\n  IntentButtonOrActionButton.displayName = 'Link'\n\n  return (\n    <MenuItem\n      as={IntentButtonOrActionButton}\n      data-as={item.intent ? 'a' : 'button'}\n      hotkeys={hotkeys}\n      icon={item.icon}\n      onClick={handleClick}\n      padding={0}\n      text={item.title}\n    />\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {createContext} from 'react'\nimport {PaneContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n","import {createContext} from 'react'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize]\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, CardProps, Code, Flex, useForwardedRef} from '@sanity/ui'\nimport React, {forwardRef, useMemo, useState, useCallback, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneContext} from './PaneContext'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneProps {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef]\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement]\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement]\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth]\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <Root\n            data-testid=\"pane\"\n            tone=\"inherit\"\n            hidden={hidden}\n            id={id}\n            overflow={layoutCollapsed ? undefined : 'hidden'}\n            {...restProps}\n            data-pane-collapsed={collapsed ? '' : undefined}\n            data-pane-index={paneIndex}\n            data-pane-selected={selected ? '' : undefined}\n            ref={setRef}\n            style={style}\n          >\n            {PANE_DEBUG && (\n              <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                <Code size={1}>\n                  {[\n                    `#${paneIndex}`,\n                    `collapsed=${collapsed}`,\n                    `currentMinWidth=${currentMinWidth}`,\n                    `currentMaxWidth=${currentMaxWidth}`,\n                    `flex=${flex}`,\n                    `minWidth=${minWidth}`,\n                    `maxWidth=${maxWidth}`,\n                  ].join('\\n')}\n                </Code>\n              </Card>\n            )}\n\n            <BoundaryElementProvider element={rootElement}>\n              {!hidden && (\n                <Flex direction=\"column\" height=\"fill\">\n                  {children}\n                </Flex>\n              )}\n            </BoundaryElementProvider>\n          </Root>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {useContext} from 'react'\nimport {PaneContext} from './PaneContext'\nimport {PaneContextValue} from './types'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {BoxOverflow} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\nimport {Root} from './PaneContent.styles'\n\ninterface PaneContentProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","import {Card, Layer} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneFooterProps {\n  children?: React.ReactNode\n  padding?: number | number[]\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Box, Flex, Layer, rgba, TextSkeleton, Text, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  line-height: 0;\n  position: sticky;\n  top: 0;\n\n  &:not([data-collapsed]):after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleBox = styled(Box)``\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nconst TABS_SCROLL_PADDING = 100\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    margin: -${space[2]}px 0 -${space[2]}px -${space[3]}px;\n    overflow: hidden;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      padding: ${space[2]}px 0 calc(${TABS_SCROLL_PADDING}px + ${space[2]}px) ${space[3]}px;\n      margin-bottom: ${0 - TABS_SCROLL_PADDING}px;\n      overflow: auto;\n\n      /* right padding */\n      & > div:after {\n        content: '';\n        display: inline-block;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: ${space[3]}px;\n        height: 1px;\n      }\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n","import {useElementRect, Box, Card, Flex, LayerProvider} from '@sanity/ui'\nimport React, {useMemo, useCallback, forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Layout, Root, TabsBox, TitleBox, TitleTextSkeleton, TitleText} from './PaneHeader.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneHeaderProps {\n  actions?: React.ReactNode\n  backButton?: React.ReactNode\n  loading?: boolean\n  subActions?: React.ReactNode\n  tabs?: React.ReactNode\n  title: React.ReactNode\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {actions, backButton, loading, subActions, tabs, title} = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect]\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root data-collapsed={collapsed ? '' : undefined} data-testid=\"pane-header\" ref={ref}>\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              onClick={handleLayoutClick}\n              padding={2}\n              paddingBottom={tabs || subActions ? 0 : 2}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              {backButton}\n\n              <TitleBox\n                flex={1}\n                onClick={handleTitleClick}\n                paddingY={3}\n                paddingLeft={backButton ? 1 : 3}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} />}\n                {!loading && (\n                  <TitleText tabIndex={0} textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleBox>\n\n              {actions && (\n                <Box hidden={collapsed} paddingLeft={1}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n            </Layout>\n\n            {(tabs || subActions) && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                paddingTop={1}\n                paddingRight={2}\n                paddingBottom={2}\n                paddingLeft={3}\n                overflow=\"auto\"\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  <div>{tabs}</div>\n                </TabsBox>\n\n                {subActions && <Box>{subActions}</Box>}\n              </Flex>\n            )}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {Button} from '@sanity/ui'\nimport React, {forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../types'\nimport {IntentLink} from 'sanity/router'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {intent: RouterIntent} & Omit<React.ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: React.ReactNode},\n        linkRef: React.ForwardedRef<HTMLAnchorElement>\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent]\n  )\n\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button\n      {...restProps}\n      as={Link}\n      data-as=\"a\"\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n    />\n  )\n})\n","import {Tooltip, Text, Box} from '@sanity/ui'\nimport React from 'react'\nimport {useCurrentUser, InsufficientPermissionsMessage} from 'sanity'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  loading: boolean\n  children: React.ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          <Box padding={2}>\n            <Text>Loading…</Text>\n          </Box>\n        ) : (\n          <InsufficientPermissionsMessage currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport React, {useMemo, forwardRef} from 'react'\nimport {Box, Button, Label, Menu, MenuButton, MenuItem, PopoverProps} from '@sanity/ui'\nimport {Schema} from '@sanity/types'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\nimport {IntentLink} from 'sanity/router'\nimport {\n  useTemplatePermissions,\n  TemplatePermissionsResult,\n  Template,\n  InitialValueTemplateItem,\n  useSchema,\n  useTemplates,\n} from 'sanity'\n\nexport type PaneHeaderIntentProps = React.ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {}\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip reveal loading={isTemplatePermissionsLoading}>\n        <Button\n          aria-label=\"Insufficient permissions\"\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          disabled\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n      >\n        <IntentButton\n          aria-label={firstItem.title}\n          icon={firstItem.icon || ComposeIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          padding={3}\n          data-testid=\"multi-action-intent-button\"\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n            <Label muted>Create</Label>\n          </Box>\n\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((t) => t.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              )\n            )\n\n            Link.displayName = 'Link'\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={item.title || template.title}\n                  aria-label={disabled ? 'Insufficient permissions' : item.title || template.title}\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {UnknownIcon} from '@sanity/icons'\nimport {Box, Button, Inline, Text, Tooltip} from '@sanity/ui'\nimport {partition, uniqBy} from 'lodash'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport {DeskToolPaneActionHandler, PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {IntentButton} from '../IntentButton'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\nimport {useTemplates, InitialValueTemplateItem} from 'sanity'\n\n// to preserve memory references\nconst emptyArray: never[] = []\nconst emptyObject = {}\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, DeskToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(\n  ({\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = emptyArray,\n    menuItems = emptyArray,\n    menuItemGroups = emptyArray,\n    actionHandlers = emptyObject,\n  }: PaneHeaderActionsProps) => {\n    const templates = useTemplates()\n\n    const handleAction = useCallback(\n      (item: PaneMenuItem) => {\n        if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n          console.warn('No handler for action:', item.action)\n          return false\n        }\n\n        const handler =\n          // eslint-disable-next-line no-nested-ternary\n          typeof item.action === 'function'\n            ? item.action\n            : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n        if (handler) {\n          handler(item.params as Record<string, string>)\n          return true\n        }\n\n        return false\n      },\n      [actionHandlers]\n    )\n\n    const [actionMenuItems, contextMenuItems] = useMemo(() => {\n      const nonCreateMenuItem = menuItems\n        // remove items with `create` intents because those will get combined\n        // into one action button later\n        .filter((item) => item.intent?.type !== 'create')\n\n      return partition(nonCreateMenuItem, (item) => item.showAsAction)\n    }, [menuItems])\n\n    const initialValueTemplateItemFromMenuItems = useMemo(() => {\n      return menuItems\n        .map((item, menuItemIndex) => {\n          if (item.intent?.type !== 'create') return null\n\n          const {params} = item.intent\n          if (!params) return null\n\n          const intentParams = Array.isArray(params) ? params[0] : params\n          const templateParams = Array.isArray(params) ? params[1] : undefined\n\n          // fallback to the schema type name as the template ID.\n          // by default, the initial template values are populated from every\n          // document type in the schema\n          const templateId = intentParams.template || intentParams.type\n          if (!templateId) return null\n\n          // eslint-disable-next-line max-nested-callbacks\n          const template = templates.find((t) => t.id === templateId)\n          // the template doesn't exist then the action might be disabled\n          if (!template) return null\n\n          const initialDocumentId = intentParams.id\n\n          return {\n            item,\n            template,\n            templateParams,\n            menuItemIndex,\n            initialDocumentId,\n          }\n        })\n        .filter(isNonNullable)\n        .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n          const initialValueTemplateItem: InitialValueTemplateItem = {\n            id: `menuItem${menuItemIndex}`,\n            initialDocumentId,\n            templateId: template.id,\n            type: 'initialValueTemplateItem',\n            title: item.title || template.title,\n            icon: item.icon as InitialValueTemplateItem['icon'],\n            description: template.description,\n            parameters: templateParams,\n            schemaType: template.schemaType,\n          }\n\n          return initialValueTemplateItem\n        })\n    }, [menuItems, templates])\n\n    const combinedInitialValueTemplates = useMemo(() => {\n      // this de-dupes create actions\n      return uniqBy(\n        [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n        (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters])\n      )\n    }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n    return (\n      <Inline space={1}>\n        {[\n          Boolean(combinedInitialValueTemplates.length) && (\n            <PaneHeaderCreateButton\n              key=\"$CreateMenuButton\"\n              templateItems={combinedInitialValueTemplates}\n            />\n          ),\n          //\n          ...actionMenuItems.map((actionItem, actionIndex) => {\n            return (\n              <Tooltip\n                content={\n                  <Box padding={2}>\n                    <Text size={1}>{actionItem.title}</Text>\n                  </Box>\n                }\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${actionIndex}-${actionItem.title}`}\n                placement=\"bottom\"\n              >\n                {actionItem.intent ? (\n                  <IntentButton\n                    intent={actionItem.intent}\n                    aria-label={actionItem.title}\n                    icon={actionItem.icon || UnknownIcon}\n                    mode=\"bleed\"\n                  />\n                ) : (\n                  <Button\n                    aria-label={actionItem.title}\n                    icon={actionItem.icon || UnknownIcon}\n                    mode=\"bleed\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => handleAction(actionItem)}\n                  />\n                )}\n              </Tooltip>\n            )\n          }),\n          //\n          Boolean(contextMenuItems.length) && (\n            <PaneContextMenuButton\n              items={contextMenuItems}\n              itemGroups={menuItemGroups}\n              key=\"$ContextMenu\"\n              onAction={handleAction}\n            />\n          ),\n        ]}\n      </Inline>\n    )\n  }\n)\n\nPaneHeaderActions.displayName = 'PaneHeaderActions'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport React, {useCallback, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DELETE: 'This document doesn’t yet exist or is already deleted',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: 'Delete',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"delete this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title:\n      (deleteOp.disabled &&\n        DISABLED_REASON_TITLE[deleteOp.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: isDeleting ? 'Deleting…' : 'Delete',\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'dialog',\n      onClose: onComplete,\n      content: (\n        <ConfirmDeleteDialog\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {\n  DocumentActionComponent,\n  DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NO_CHANGES: 'This document has no unpublished changes',\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to discard all changes since last published?</>,\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete]\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: 'Discard changes',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"discard changes in this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title:\n      (discardChanges.disabled &&\n        DISABLED_REASON_TITLE[discardChanges.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: 'Discard changes',\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport React, {useCallback, useState} from 'react'\nimport {useRouter} from 'sanity/router'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useDocumentOperation,\n  useCurrentUser,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DUPLICATE: 'This document doesn’t yet exist so there‘s nothing to duplicate',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const {duplicate} = useDocumentOperation(id, type)\n  const router = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(() => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n    ;(duplicate.execute as any)(dupeId)\n    router.navigateIntent('edit', {id: dupeId, type})\n    onComplete()\n  }, [duplicate, onComplete, router, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: 'Duplicate',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"duplicate this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? 'Duplicating…' : 'Duplicate',\n    title:\n      (duplicate.disabled &&\n        DISABLED_REASON_TITLE[duplicate.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n","import {RestoreIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {DocumentActionComponent, DocumentActionDialogProps, useDocumentOperation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore}: any = useDocumentOperation(id, type)\n  const router = useRouter()\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision)\n    router.navigateIntent('edit', {id, type})\n    onComplete()\n  }, [revision, restore, router, onComplete, id, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to restore this document?</>,\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: 'Restore',\n    color: 'primary',\n    onHandle: handle,\n    title: isRevisionInitialVersion\n      ? \"You can't restore to the initial version\"\n      : 'Restore to this version',\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n","import {\n  ValidationMarker,\n  Path,\n  SanityDocument,\n  ObjectSchemaType,\n  SanityDocumentLike,\n} from '@sanity/types'\nimport {createContext} from 'react'\nimport {View} from '../../structureBuilder'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {TimelineMode} from './types'\nimport {\n  DocumentActionComponent,\n  DocumentBadgeComponent,\n  DocumentFormNode,\n  DocumentLanguageFilterComponent,\n  DocumentPermission,\n  EditStateFor,\n  PatchEvent,\n  PermissionCheckResult,\n  StateTree,\n  Timeline,\n  TimelineController,\n} from 'sanity'\n\n/** @internal */\nexport interface DocumentPaneContextValue {\n  actions: DocumentActionComponent[] | null\n  activeViewId: string | null\n  badges: DocumentBadgeComponent[] | null\n  changesOpen: boolean\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  compareValue: Partial<SanityDocument> | null\n  connectionState: 'connecting' | 'reconnecting' | 'connected'\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  documentIdRaw: string\n  documentType: string\n  editState: EditStateFor | null\n  focusPath: Path\n  // TODO: rename this for consistency\n  historyController: TimelineController\n  index: number\n  inspectOpen: boolean\n  menuItemGroups: PaneMenuItemGroup[]\n  menuItems: PaneMenuItem[]\n  onBlur: (blurredPath: Path) => void\n  onChange: (event: PatchEvent) => void\n  onFocus: (pathOrEvent: Path) => void\n  onHistoryClose: () => void\n  onHistoryOpen: () => void\n  onInspectClose: () => void\n  onKeyUp: (event: React.KeyboardEvent<HTMLDivElement>) => void\n  onMenuAction: (item: PaneMenuItem) => void\n  onPaneClose: () => void\n  onPaneSplit?: () => void\n  onPathOpen: (path: Path) => void\n  onSetActiveFieldGroup: (path: Path, groupName: string) => void\n  onSetCollapsedPath: (path: Path, expanded: boolean) => void\n  onSetCollapsedFieldSet: (path: Path, expanded: boolean) => void\n  paneKey: string\n  previewUrl?: string | null\n  ready: boolean\n  schemaType: ObjectSchemaType\n  setTimelineMode: (mode: TimelineMode) => void\n  setTimelineRange(since: string | null, rev: string | null): void\n  source?: string\n  timeline: Timeline\n  timelineMode: TimelineMode\n  title: string | null\n  validation: ValidationMarker[]\n  value: SanityDocumentLike\n  views: View[]\n  formState: DocumentFormNode | null\n  permissions?: PermissionCheckResult | null\n  isPermissionsLoading: boolean\n  unstable_languageFilter: DocumentLanguageFilterComponent[]\n}\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n","import {useContext} from 'react'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {CheckmarkIcon, PublishIcon} from '@sanity/icons'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport React, {useCallback, useEffect, useState} from 'react'\nimport {TimeAgo} from '../components'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useSyncState,\n  useValidationStatus,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  LIVE_EDIT_ENABLED: 'Cannot publish since liveEdit is enabled for this document type',\n  ALREADY_PUBLISHED: 'Already published',\n  NO_CHANGES: 'No unpublished changes',\n  NOT_READY: 'Operation not ready',\n}\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE,\n  publishedAt: string | undefined\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return (\n      <>\n        <span>\n          Published <TimeAgo time={publishedAt} />\n        </span>\n      </>\n    )\n  }\n  return DISABLED_REASON_TITLE[reason]\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt) || ''\n    : hasValidationErrors\n    ? 'There are validation errors that need to be fixed before this document can be published'\n    : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const handle = useCallback(() => {\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title:\n        'Live Edit is enabled for this content type and publishing happens automatically as you make changes',\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"publish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'positive',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? 'Published'\n        : publishScheduled || publishState === 'publishing'\n        ? 'Publishing…'\n        : 'Publish',\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: publishState === 'published' ? CheckmarkIcon : PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? 'Waiting for tasks to finish before publishing'\n      : publishState === 'published' || publishState === 'publishing'\n      ? null\n      : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n","import {UnpublishIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useCurrentUser,\n  useDocumentOperation,\n  DocumentActionModalDialogProps,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"unpublish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: 'Unpublish',\n    title: unpublish.disabled\n      ? DISABLED_REASON_TITLE[unpublish.disabled as keyof typeof DISABLED_REASON_TITLE]\n      : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n","import {DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n","import {uuid} from '@sanity/uuid'\nimport {PaneNode, RouterPanes} from './types'\nimport {EMPTY_PARAMS, LOADING_PANE} from './constants'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n","import {omit} from 'lodash'\nimport {RouterPanes, RouterPaneGroup, RouterPaneSibling} from './types'\nimport {route} from 'sanity/router'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayload = (str: string) =>\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n  ? never\n  : T extends 0\n  ? never\n  : T extends 0n\n  ? never\n  : T extends null | undefined\n  ? NonNullable<T>\n  : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  return chunks.reduce(\n    (pane, chunk) => {\n      if (isParam(chunk)) {\n        const key = chunk.slice(0, chunk.indexOf('='))\n        const value = chunk.slice(key.length + 1)\n        pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n      } else if (isPayload(chunk)) {\n        pane.payload = tryParseBase64Payload(chunk)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unknown pane segment: %s - skipping', chunk)\n      }\n\n      return pane\n    },\n    {...initial, params: EMPTY_PARAMS, payload: undefined}\n  )\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload = typeof payload === 'undefined' ? undefined : btoa(JSON.stringify(payload))\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string) {\n  return data ? tryParsePayload(atob(data)) : undefined\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {router} from './router'\nimport {DeskToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\n/** @beta */\nexport const deskTool = definePlugin<DeskToolOptions | void>((options) => ({\n  name: '@sanity/desk-tool',\n  document: {\n    actions: (prevActions) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document actions already exist in the Studio config\n      const actions = prevActions.slice(0)\n      for (const action of documentActions) {\n        if (!actions.includes(action)) actions.push(action)\n      }\n      return actions\n    },\n    badges: (prevBadges) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document badges already exist in the Studio config\n      const badges = prevBadges.slice(0)\n      for (const badge of documentBadges) {\n        if (!badges.includes(badge)) badges.push(badge)\n      }\n      return badges\n    },\n  },\n  tools: [\n    {\n      name: options?.name || 'desk',\n      title: options?.title || 'Desk',\n      icon: options?.icon || MasterDetailIcon,\n      component: lazy(() => import('./components/deskTool')),\n      canHandleIntent: (intent, params) => {\n        return Boolean(\n          (intent === 'edit' && params.id) ||\n            (intent === 'create' && params.type) ||\n            (intent === 'create' && params.template)\n        )\n      },\n      getIntentState,\n      options,\n      router,\n    },\n  ],\n}))\n","import {createContext} from 'react'\nimport {DeskToolContextValue} from './types'\n\nexport const DeskToolContext = createContext<DeskToolContextValue | null>(null)\n","import {SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string\n  ) {\n    super(message)\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[]): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_FIELDS.includes(head)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The current ordering config targeted the nonexistent field \"%s\" on schema type \"%s\". It should be one of %o',\n        head,\n        schemaType.name,\n        schemaType.fields.map((field) => field.name)\n      )\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(schemaType: SchemaType, orderBy: SortOrderingItem[]): string {\n  return orderBy.map((ordering) => joinReferences(schemaType, ordering.field.split('.'))).join(', ')\n}\n","import {SortOrdering} from '@sanity/types'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n","import {SchemaType, SortOrdering, SortOrderingItem} from '@sanity/types'\nimport {SortIcon} from '@sanity/icons'\nimport {getExtendedProjection} from './util/getExtendedProjection'\nimport {Intent} from './Intent'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/** @beta */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/** @beta */\nexport interface MenuItem {\n  title: string\n  action?: MenuItemActionType\n  intent?: Intent\n  group?: string\n  // TODO: align these with TemplateResponse['icon']\n  icon?: React.ComponentType | React.ReactNode\n  params?: MenuItemParamsType\n  showAsAction?: boolean\n}\n\n/** @beta */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/** @beta */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  protected spec: PartialMenuItem\n\n  constructor(protected _context: StructureContext, spec?: MenuItem) {\n    this.spec = spec ? spec : {}\n  }\n\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  ordering: SortOrdering,\n  extendedProjection?: string\n): MenuItemBuilder {\n  return new MenuItemBuilder(context)\n    .group('sorting')\n    .title(`Sort by ${ordering.title}`)\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by: ordering.by, extendedProjection})\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by))\n  )\n}\n","import {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport interface MenuItemGroup {\n  id: string\n  title: string\n}\n\n/** @beta */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  protected _id: string\n  protected _title: string\n\n  constructor(protected _context: StructureContext, spec?: MenuItemGroup) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n  }\n\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title})\n  }\n\n  getId(): string {\n    return this._id\n  }\n\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id: this._id, title})\n  }\n\n  getTitle(): string {\n    return this._title\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n    }\n  }\n}\n","import {SerializeError} from '../SerializeError'\nimport {SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  return id\n}\n","import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n","import {SerializeOptions, StructureNode, Serializable, Child} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {validateId} from './util/validateId'\nimport {UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/** @beta */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  component: UserComponent\n  child?: Child\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n  options: {[key: string]: unknown}\n}\n\n/** @beta */\nexport interface ComponentInput extends StructureNode {\n  component: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  component?: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\nexport class ComponentBuilder implements Serializable<Component> {\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path)\n      ),\n    }\n  }\n\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {SanityClient} from '@sanity/client'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  getDraftId,\n  getPublishedId,\n  type SourceClientOptions,\n} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string\n): Promise<string | undefined> {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = getPublishedId(id)\n  const draftId = getDraftId(id)\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'}\n  )\n\n  return types[0]\n}\n","import {kebabCase} from 'lodash'\nimport {Serializable, SerializeOptions, SerializePath} from '../StructureNodes'\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {validateId} from '../util/validateId'\nimport {View} from '../types'\nimport {ComponentViewBuilder} from './ComponentView'\nimport {FormViewBuilder} from './FormView'\n\n/** @beta */\nexport interface BaseView {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/** @beta */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  protected spec: TView = {} as TView\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n","import {SerializeOptions} from '../StructureNodes'\nimport {SerializeError, HELP_URL} from '../SerializeError'\nimport type {UserViewComponent} from '../types'\nimport {BaseView, GenericViewBuilder} from './View'\nimport {isRecord} from 'sanity'\n\n/** @beta */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  component: UserViewComponent\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/** @beta */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  protected spec: Partial<ComponentView>\n\n  constructor(componentOrSpec?: UserViewComponent | Partial<ComponentView>) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SerializeOptions} from '../StructureNodes'\nimport {BaseView, GenericViewBuilder} from './View'\n\n/** @beta */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/** @beta */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {UserViewComponent} from '../types'\nimport {ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {FormView, FormViewBuilder} from './FormView'\n\nexport * from './FormView'\nexport * from './ComponentView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n","import {uniq} from 'lodash'\nimport {SchemaType} from '@sanity/types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {ChildResolver} from './ChildResolver'\nimport {SerializeOptions, Serializable, Child, DocumentNode, EditorNode} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {validateId} from './util/validateId'\nimport {ViewBuilder, maybeSerializeView} from './views/View'\nimport {form} from './views'\nimport type {StructureContext, View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/** @beta */\nexport interface DocumentOptions {\n  id: string\n  type: string\n  template?: string\n  templateParameters?: Record<string, unknown>\n}\n\n/** @beta */\nexport type PartialDocumentNode = {\n  id?: string\n  title?: string\n  child?: Child\n  views?: (View | ViewBuilder)[]\n  options?: Partial<DocumentOptions>\n}\n\n/** @beta */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  protected spec: PartialDocumentNode\n\n  constructor(protected _context: StructureContext, spec?: PartialDocumentNode) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path)\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters\n  )\n}\n","export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n","import {PartialDocumentList, getTypeNamesFromFilter} from './DocumentList'\nimport {StructureNode} from './StructureNodes'\n\n/** @beta */\nexport type IntentJsonParams = {[key: string]: any}\n\n/** @beta */\nexport type BaseIntentParams = {\n  type?: string\n  id?: string\n  template?: string\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/** @beta */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/** @beta */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  type: string\n  params?: IntentParams\n}\n\n/** @beta */\nexport interface IntentChecker {\n  (\n    intentName: string,\n    params: {[key: string]: any},\n    context: {pane: StructureNode; index: number}\n  ): boolean\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n","import {pickBy} from 'lodash'\nimport {ComposeIcon} from '@sanity/icons'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {Serializable, SerializeOptions, SerializePath} from './StructureNodes'\nimport {MenuItemBuilder, MenuItem} from './MenuItem'\nimport {IntentParams} from './Intent'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\n/** @beta */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(protected _context: StructureContext, spec?: Partial<InitialValueTemplateItem>) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[]\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create new'\n    const params = pickBy(\n      {type: template && template.schemaType, template: item.templateId},\n      Boolean\n    )\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    return new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || ComposeIcon)\n      .intent({type: 'create', params: intentParams})\n      .serialize()\n  })\n}\n","import {Child, Serializable, SerializeOptions, StructureNode} from './StructureNodes'\nimport {layoutOptions} from './Layout'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {IntentChecker, defaultIntentChecker} from './Intent'\nimport {SerializeError} from './SerializeError'\nimport {\n  InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {validateId} from './util/validateId'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {PreviewLayoutKey, InitialValueTemplateItem} from 'sanity'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/** @beta */\nexport interface ListDisplayOptions {\n  showIcons?: boolean\n}\n\n/** @beta */\nexport interface BaseGenericList extends StructureNode {\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  displayOptions?: ListDisplayOptions\n  child: Child\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/** @beta */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  type: string\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n}\n\n/** @beta */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  id: string\n  title: string\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  child?: Child\n}\n\n/** @beta */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  protected initialValueTemplatesSpecified = false\n  protected spec: TList = {} as TList\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  canHandleIntent(canHandleIntent: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path)\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path)\n      ),\n    }\n  }\n\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\nimport {ComposeIcon} from '@sanity/icons'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {SerializeOptions, Child} from './StructureNodes'\nimport {ChildResolver, ChildResolverOptions, ItemChild} from './ChildResolver'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n} from './GenericList'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType('')\n    )\n  }\n\n/** @beta */\nexport interface PartialDocumentList extends BuildableGenericList {\n  options?: DocumentListOptions\n  schemaTypeName?: string\n}\n\n/** @beta */\nexport interface DocumentListInput extends GenericListInput {\n  options: DocumentListOptions\n}\n\n/** @beta */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  options: DocumentListOptions\n  child: Child\n  schemaTypeName?: string\n}\n\n/** @beta */\nexport interface DocumentListOptions {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/** @beta */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        apiVersion:\n          this.spec.options.apiVersion ||\n          // If this is a simple type filter, use modern API version - otherwise default to v1\n          (this.spec.options?.filter === '_type == $type' ? '2021-06-07' : '1'),\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      })\n    )\n    .map((option) => ({...option, icon: ComposeIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n","import {find} from 'lodash'\nimport {SerializePath, SerializeOptions, Divider} from './StructureNodes'\nimport {ChildResolverOptions, ChildResolver} from './ChildResolver'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListItem, ListItemBuilder} from './ListItem'\nimport {IntentChecker} from './Intent'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/** @beta */\nexport interface List extends GenericList {\n  type: 'list'\n  items: (ListItem | Divider)[]\n}\n\n/** @beta */\nexport interface ListInput extends GenericListInput {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/** @beta */\nexport interface BuildableList extends BuildableGenericList {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/** @beta */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  protected spec: BuildableList\n\n  constructor(protected _context: StructureContext, spec?: ListInput) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {Observable} from 'rxjs'\nimport {SerializeOptions, Serializable, Collection, CollectionBuilder} from './StructureNodes'\nimport {ChildResolver, ItemChild} from './ChildResolver'\nimport {DocumentListBuilder} from './DocumentList'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListBuilder} from './List'\nimport {DocumentBuilder} from './Document'\nimport {ComponentBuilder} from './Component'\nimport {validateId} from './util/validateId'\nimport {StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/** @beta */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/** @beta */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/** @beta */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  titleIsOptional?: boolean\n}\n\n/** @beta */\nexport interface ListItemDisplayOptions {\n  showIcon?: boolean\n}\n\n/** @beta */\nexport interface ListItemInput {\n  id: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/** @beta */\nexport interface ListItem {\n  id: string\n  type: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType\n}\n\n/** @beta */\nexport interface UnserializedListItem {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: UnserializedListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/** @beta */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/** @beta */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  protected spec: PartialListItem\n\n  constructor(protected _context: StructureContext, spec?: ListItemInput) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {SerializeOptions} from './StructureNodes'\nimport {ListItemBuilder, ListItem, UnserializedListItem, ListItemInput} from './ListItem'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\n/** @beta */\nexport interface DocumentListItemInput extends ListItemInput {\n  schemaType: SchemaType | string\n}\n\n/** @beta */\nexport interface DocumentListItem extends ListItem {\n  schemaType: SchemaType\n  _id: string\n}\n\n/** @beta */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/** @beta */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  protected spec: PartialDocumentListItem\n\n  constructor(protected _context: StructureContext, spec?: DocumentListItemInput) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n","import {SchemaType} from '@sanity/types'\nimport {DocumentListBuilder, DocumentListInput, PartialDocumentList} from './DocumentList'\nimport {Child} from './StructureNodes'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {GenericListInput} from './GenericList'\nimport {StructureContext} from './types'\n\n/** @beta */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  schemaType: SchemaType | string\n}\n\n/** @beta */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\nimport {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListItemBuilder, ListItem} from './ListItem'\nimport {DocumentTypeListBuilder, DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {List} from './List'\nimport {Collection} from './StructureNodes'\nimport {StructureContext} from './types'\n\nfunction shouldShowIcon(schemaType: SchemaType): boolean {\n  const preview = schemaType.preview\n  return Boolean(preview && (preview.prepare || (preview.select && preview.select.media)))\n}\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n  const showIcons = shouldShowIcon(type)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .showIcons(showIcons)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {id: 'sorting', title: 'Sort'},\n        {id: 'layout', title: 'Layout'},\n        {id: 'actions', title: 'Actions'},\n      ]\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId}))\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Compact view')\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Detailed view')\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ]\n    )\n}\n","import {uniqueId} from 'lodash'\nimport type {SchemaType} from '@sanity/types'\nimport {isValidElementType} from 'react-is'\nimport {ListBuilder} from './List'\nimport {\n  getDocumentTypeListItems,\n  getDocumentTypeListItem,\n  getDocumentTypeList,\n} from './documentTypeListItems'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType, getOrderingMenuItem} from './MenuItem'\nimport {ListItemBuilder} from './ListItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {DocumentListBuilder} from './DocumentList'\nimport type {Divider} from './StructureNodes'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {ComponentInput, ComponentBuilder} from './Component'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport * as views from './views'\nimport {\n  InitialValueTemplateItemBuilder,\n  defaultInitialValueTemplateItems,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport type {\n  StructureBuilder,\n  UserComponent,\n  StructureContext,\n  DefaultDocumentNodeResolver,\n} from './types'\nimport {Source, getConfigContextFromSource, getPublishedId} from 'sanity'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n","import React, {useMemo, useState} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {createStructureBuilder, DefaultDocumentNodeResolver} from './structureBuilder'\nimport {StructureResolver, UnresolvedPaneNode} from './types'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\n\n/** @internal */\nexport interface DeskToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: React.ReactNode\n}\n\n/** @internal */\nexport function DeskToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: DeskToolProviderProps): React.ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  return (\n    <DeskToolContext.Provider\n      value={useMemo(() => {\n        return {\n          features: {\n            backButton: layoutCollapsed,\n            reviewChanges: !layoutCollapsed,\n            splitPanes: !layoutCollapsed,\n            splitViews: !layoutCollapsed,\n          },\n          layoutCollapsed,\n          setLayoutCollapsed,\n          rootPaneNode,\n          structureContext: S.context,\n        }\n      }, [layoutCollapsed, rootPaneNode, S.context])}\n    >\n      {children}\n    </DeskToolContext.Provider>\n  )\n}\n"],"names":["DocTitle","props","document","documentValue","schema","useSchema","schemaType","get","_type","error","value","useValuePreview","children","jsxs","Fragment","message","jsx","title","style","color","TimeAgo","time","timeAgo","useTimeAgo","isClientError","e","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","map","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","documentId","versionedClient","draftId","getDraftId","publishedId","getPublishedId","requestOptions","uri","getDataUrl","json","query","excludeContent","tag","observable","request","omitted","nonExistant","filter","doc","reason","length","some","id","fetchCrossDatasetReferences","context","checkDocumentId","of","totalCount","references","currentDataset","config","dataset","url","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","documentStore","referencesClause","totalClause","fetchQuery","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","internalReferences","isInternalReferencesLoading","useMemo","crossDatasetReferences","isCrossDatasetReferencesLoading","projectIds","Array","from","Set","crossDatasetReference","projectId","Boolean","sort","datasetNames","datasetName","hasUnknownDatasetNames","isLoading","PublishedStatus","updatedAt","_updatedAt","Tooltip","portal","content","Box","padding","Text","size","TextWithTone","tone","dimmed","muted","PublishIcon","DraftStatus","EditIcon","PaneItemPreview","icon","layout","presence","isRecord","isValidElement","isString","isNumber","draft","published","useMemoObservable","getPreviewStateObservable","documentPreviewStore","_id","status","Inline","space","DocumentPreviewPresence","SanityDefaultPreview","getPreviewValueWithFallback","isPlaceholder","missingContext","Error","PaneRouterContext","createContext","index","groupIndex","siblingIndex","payload","params","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","forwardRef","ref","useContext","panes","slice","state","StateLink","childId","childPayload","childParameters","rest","documentType","parentRefPath","template","type","pathToString","currentPanes","nextParams","useUnique","nextPayload","nextState","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","usePaneRouter","EMPTY_ARRAY","ReferencePreviewLink","onClick","documentPresence","useDocumentPresence","useDocumentPreviewStore","Link","useCallback","LinkComponent","linkProps","name","PreviewCard","__unstable_focusRing","as","radius","ChevronWrapper","styled","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","TableContainer","attrs","paddingX","paddingBottom","Table","table","theme","rem","sanity","DocumentIdFlex","Flex","ReferencesCard","Card","shadow","marginBottom","flex","OtherReferenceCount","difference","placement","Container","width","InfoOutlineIcon","ConfirmDeleteDialogBody","documentTitle","action","onReferenceLinkClick","toast","useToast","renderPreviewItem","item","UnknownIcon","subtitle","documentCount","toLocaleString","normalizedDatasetNames","datasetsCount","datasetNameList","join","WarningOutlineIcon","marginLeft","direction","height","Stack","overflow","borderTop","align","marginRight","DocumentsIcon","textOverflow","ChevronDownIcon","Label","reference","gap","justify","CopyToClipboard","text","onCopy","push","Button","mode","ClipboardIcon","fontSize","DialogBody","LoadingContainer","ConfirmDeleteDialog","onCancel","onConfirm","dialogId","useId","capitalizedAction","substring","toUpperCase","showConfirmButton","Dialog","header","footer","Grid","columns","paddingY","onClose","onClickOutside","Spinner","marginTop","ConfirmDeleteDialogContainer","setError","useState","handleRetry","ErrorBoundary","onCatch","CONTEXT_MENU_POPOVER_PROPS","constrainSize","PaneContextMenuButton","items","itemGroups","onAction","groups","defaultGroup","groupMap","reduce","acc","group","Object","values","concat","g","MenuButton","button","EllipsisVerticalIcon","menu","Menu","MenuDivider","paddingTop","itemIndex","PaneContextMenuItem","popover","handleClick","hotkeys","shortcut","split","IntentButtonOrActionButton","linkRef","intent","IntentLink","MenuItem","pressed","selected","displayName","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","PaneContext","PaneLayoutContext","usePaneLayout","pane","Root","Layer","PaneDivider","disabled","element","resize","dragging","setDragging","handleMouseDown","event","preventDefault","startX","pageX","handleMouseMove","deltaX","handleMouseUp","window","removeEventListener","addEventListener","onMouseDown","Pane","_a","_b","_c","currentMinWidth","currentMinWidthProp","currentMaxWidth","currentMaxWidthProp","flexProp","minWidth","minWidthProp","maxWidth","maxWidthProp","restProps","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","find","p","paneIndex","indexOf","nextPane","isLast","nextCollapsed","forwardedRef","useForwardedRef","setRef","refValue","current","useEffect","handleCollapse","handleExpand","contextValue","hidden","divider","LegacyLayerProvider","zOffset","Infinity","Provider","BoundaryElementProvider","usePane","PaneContent","forwardedAs","RootCard","PaneFooter","Layout","TitleBox","TitleTextSkeleton","TextSkeleton","TitleText","TABS_SCROLL_PADDING","TabsBox","css","rgba","base","bg","PaneHeader","actions","backButton","loading","subActions","tabs","paneElement","paneRect","useElementRect","layoutStyle","innerHeight","handleTitleClick","handleLayoutClick","LayerProvider","sizing","paddingLeft","animated","tabIndex","weight","paddingRight","IntentButton","role","InsufficientPermissionsMessageTooltip","reveal","currentUser","useCurrentUser","InsufficientPermissionsMessage","POPOVER_PROPS","getIntent","templates","typeName","t","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","templateItems","useTemplates","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","nothingGranted","every","permission","granted","permissionsById","ComposeIcon","firstItem","permissions","emptyArray","emptyObject","isNonNullable","hashObject","sortObject","v","isArray","entries","keyA","keyB","localeCompare","normalize","JSON","parse","stringify","PaneHeaderActions","memo","initialValueTemplateItems","initialValueTemplateItemsFromStructure","menuItems","menuItemGroups","actionHandlers","handleAction","console","warn","handler","actionMenuItems","contextMenuItems","nonCreateMenuItem","partition","showAsAction","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","initialValueTemplateItem","description","combinedInitialValueTemplates","uniqBy","actionItem","actionIndex","DISABLED_REASON_TITLE","NOTHING_TO_DELETE","DeleteAction","onComplete","delete","deleteOp","useDocumentOperation","isDeleting","setIsDeleting","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","execute","handle","isPermissionsLoading","useDocumentPairPermissions","TrashIcon","label","operationLabel","onHandle","dialog","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","liveEdit","discardChanges","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","duplicate","router","useRouter","isDuplicating","setDuplicating","dupeId","uuid","CopyIcon","HistoryRestoreAction","revision","restore","isRevisionInitialVersion","isRevisionLatestVersion","RestoreIcon","DocumentPaneContext","useDocumentPane","documentPane","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","NOT_READY","getDisabledReason","publishedAt","PublishAction","publishState","setPublishState","publish","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","onHistoryOpen","editState","useEditState","_rev","hasValidationErrors","validation","isValidationErrorMarker","publishScheduled","setPublishScheduled","isSyncing","isValidating","hasDraft","doPublish","validationComplete","didPublish","delay","setTimeout","clearTimeout","transactionSyncLock","enabled","CheckmarkIcon","UnpublishAction","unpublish","UnpublishIcon","LiveEditBadge","_DEBUG","EMPTY_PARAMS","LOADING_PANE","Symbol","activePanes","setActivePanes","getIntentState","routerState","editDocumentId","isTemplate","i","canHandleIntent","call","schemaTypeName","options","paneParams","legacyEditParamsToState","decodeURIComponent","err","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","route","create","intents","path","transform","panePattern","isParam","str","test","isPayload","exclusiveParams","isTruthy","parseChunks","chunks","initial","chunk","key","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","btoa","encodedParams","entry","valueFromFirstSibling","includes","flat","parseOldPanesSegment","restOfSiblings","segment","sibling","omit","buffer","match","payloadChunk","tryParsePayload","data","atob","documentActions","documentBadges","deskTool","definePlugin","prevActions","badges","prevBadges","badge","tools","MasterDetailIcon","component","lazy","DeskToolContext","SerializeError","constructor","parentPath","hint","withHelpUrl","helpId","HELP_URL","IMPLICIT_FIELDS","joinReferences","head","tail","schemaField","fields","field","refTypes","to","refType","tailFields","tailWrapper","getExtendedProjection","orderBy","ordering","ORDER_BY_UPDATED_AT","by","ORDER_BY_CREATED_AT","DEFAULT_SELECTED_ORDERING_OPTION","DEFAULT_ORDERING_OPTIONS","maybeSerializeMenuItem","MenuItemBuilder","serialize","_context","spec","clone","getAction","getTitle","getGroup","getIcon","getParams","getShowAsAction","TITLE_REQUIRED","ACTION_OR_INTENT_REQUIRED","ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE","withSpec","builder","getOrderingMenuItem","extendedProjection","SortIcon","getOrderingMenuItemsForSchemaType","orderings","maybeSerializeMenuItemGroup","MenuItemGroupBuilder","_title","getId","ID_REQUIRED","disallowedPattern","validateId","disallowedChar","startsWith","getStructureNodeId","camelCased","camelCase","getSlug","ComponentBuilder","child","getChild","getComponent","getOptions","getMenuItems","getMenuItemGroups","componentOptions","resolveTypeForDocument","getClient","types","GenericViewBuilder","kebabCase","isSerializable","view","maybeSerializeView","isComponentSpec","ComponentViewBuilder","componentOrSpec","userComponent","COMPONENT_REQUIRED","FormViewBuilder","form","createDocumentChildResolver","resolveDocumentNode","itemId","currentSegment","DocumentBuilder","paneId","getDocumentId","getSchemaType","initialValueTemplate","templateParameters","getInitialValueTemplate","getInitialValueTemplateParameters","views","getViews","urlId","DOCUMENT_ID_REQUIRED","viewIds","dupes","uniq","viewId","getDocumentOptions","opts","documentFromEditor","documentFromEditorWithInitialValue","layoutOptions","DEFAULT_INTENT_HANDLER","defaultIntentChecker","intentName","isEdit","isCreate","typedSpec","paneFilter","typeNames","getTypeNamesFromFilter","initialValueTemplates","tpl","identity","InitialValueTemplateItemBuilder","getDescription","getTemplateId","getParameters","defaultInitialValueTemplateItems","getStructureBuilder","getTypeNames","ordered","a","b","maybeSerializeInitialValueTemplateItem","menuItemsFromInitialValueTemplateItems","pickBy","noChildResolver","shallowIntentChecker","GenericListBuilder","initialValueTemplatesSpecified","defaultLayout","getDefaultLayout","getCanHandleIntent","showIcons","displayOptions","getShowIcons","getInitialValueTemplates","validateFilter","trim","QUERY_PROVIDED_FOR_FILTER","createDocumentChildResolverForItem","parentItem","parent","Promise","resolve","then","DocumentListBuilder","apiVersion","getApiVersion","getFilter","defaultOrdering","getDefaultOrdering","FILTER_REQUIRED","inferInitialValueTemplates","inferTypeName","getSpec","flatMap","resolveNewDocumentOptions","option","getTypeNamesFromEqualityFilter","getTypeNamesFromInTypesFilter","pattern","matches","exec","candidate","normalized","replace","getArgType","thing","ListBuilder","isPromise","isListItem","defaultCanHandleIntent","isDocumentListItem","resolveChildForItem","target","maybeSerializeListItem","ListItemBuilder","listItem","gotWhat","helpText","INVALID_LIST_ITEM","getItems","LIST_ITEMS_MUST_BE_ARRAY","serializedItems","val","dupeIds","dupeDesc","LIST_ITEM_IDS_MUST_BE_UNIQUE","showIcon","getShowIcon","titleIsOptional","SCHEMA_TYPE_NOT_FOUND","serializeOptions","listChild","originalChild","childOptions","createDefaultChildResolver","DocumentListItemBuilder","SCHEMA_TYPE_REQUIRED","DocumentTypeListBuilder","cloneWithoutDefaultIntentHandler","shouldOverride","override","shouldShowIcon","preview","prepare","select","media","BUNDLED_DOC_TYPES","isBundledDocType","isDocumentType","isList","collection","getDocumentTypes","n","getDocumentTypeListItems","getDocumentTypeListItem","startCase","childContext","list","getDocumentTypeList","typeNameOrSpec","StackCompactIcon","StackIcon","hasIcon","getDefaultStructure","createStructureBuilder","defaultDocumentNode","source","configContext","getConfigContextFromSource","structureBuilder","defaults","documentTypeList","args","documentTypeListItem","documentTypeListItems","documentWithInitialValueTemplate","defaultDocument","menuItem","menuItemGroup","documentList","documentListItem","orderingMenuItem","orderingMenuItemsForType","editor","isValidElementType","uniqueId","DeskToolProvider","structure","resolveStructure","setLayoutCollapsed","useSource","useConfigContextFromSource","S","rootPaneNode","features","reviewChanges","splitPanes","splitViews","structureContext"],"mappings":"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"}