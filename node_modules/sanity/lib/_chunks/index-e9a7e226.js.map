{"version":3,"file":"index-e9a7e226.js","sources":["../../src/desk/components/Delay.tsx","../../src/desk/components/RenderActionCollectionState.tsx","../../src/desk/components/RenderBadgeCollectionState.tsx","../../src/desk/components/paneRouter/PaneRouterProvider.tsx","../../src/desk/components/pane/helpers/_calcPaneResize.ts","../../src/desk/components/pane/helpers/_getDOMPath.ts","../../src/desk/components/pane/helpers/_sortElements.ts","../../src/desk/components/pane/paneLayoutController.ts","../../src/desk/components/pane/PaneLayout.tsx","../../src/desk/structureResolvers/PaneResolutionError.ts","../../src/desk/structureResolvers/assignId.ts","../../src/desk/structureResolvers/memoBind.ts","../../src/desk/structureResolvers/createPaneResolver.ts","../../src/desk/structureResolvers/resolveIntent.ts","../../src/desk/useDeskTool.ts","../../src/desk/structureResolvers/createResolvedPaneNodeStream.ts","../../src/desk/structureResolvers/useResolvedPanes.ts","../../src/desk/components/deskTool/intentResolver/Redirect.tsx","../../src/desk/components/deskTool/intentResolver/utils.ts","../../src/desk/components/deskTool/intentResolver/IntentResolver.tsx","../../src/desk/components/deskTool/StructureError.tsx","../../src/desk/panes/unknown/UnknownPaneType.tsx","../../src/desk/panes/loading/getWaitMessages.ts","../../src/desk/panes/loading/LoadingPane.tsx","../../src/desk/panes/DeskToolPane.tsx","../../src/desk/panes/error/ErrorPane.tsx","../../src/desk/panes/document/DocumentOperationResults.tsx","../../src/desk/panes/document/menuItems.ts","../../src/desk/panes/document/usePreviewUrl.ts","../../src/desk/panes/document/getInitialValueTemplateOpts.ts","../../src/desk/panes/document/DocumentPaneProvider.tsx","../../src/desk/panes/document/timeline/constants.ts","../../src/desk/panes/document/timeline/helpers.ts","../../src/desk/panes/document/timeline/userAvatarStack.tsx","../../src/desk/panes/document/timeline/timelineItem.styled.tsx","../../src/desk/panes/document/timeline/timelineItem.tsx","../../src/desk/panes/document/timeline/timeline.styled.tsx","../../src/desk/panes/document/timeline/timeline.tsx","../../src/desk/panes/document/timeline/timelineMenu.tsx","../../src/desk/panes/document/changesPanel/content/LoadingContent.tsx","../../src/desk/panes/document/changesPanel/helpers.ts","../../src/desk/panes/document/changesPanel/ChangesPanel.tsx","../../src/desk/useDeskToolSetting.ts","../../src/desk/panes/document/inspectDialog/constants.ts","../../src/desk/panes/document/inspectDialog/helpers.ts","../../src/desk/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/desk/panes/document/inspectDialog/Search.tsx","../../src/desk/panes/document/inspectDialog/InspectDialog.tsx","../../src/desk/panes/document/documentPanel/ReferenceChangedBanner.tsx","../../src/desk/panes/document/documentPanel/PermissionCheckBanner.tsx","../../src/desk/panes/document/documentPanel/documentViews/useConditionalToast.ts","../../src/desk/panes/document/documentPanel/documentViews/FormView.tsx","../../src/desk/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/desk/panes/document/documentPanel/header/ValidationMenu.tsx","../../src/desk/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/desk/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/desk/panes/document/documentPanel/DocumentPanel.tsx","../../src/desk/panes/document/statusBar/dialogs/constants.ts","../../src/desk/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/desk/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/desk/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/desk/panes/document/statusBar/ActionStateDialog.tsx","../../src/desk/panes/document/statusBar/ActionMenuButton.tsx","../../src/desk/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/desk/panes/document/statusBar/sparkline/DocumentBadges.tsx","../../src/desk/panes/document/statusBar/sparkline/PublishStatus.tsx","../../src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/AnimatedStatusIcon.tsx","../../src/desk/panes/document/statusBar/sparkline/ReviewChangesButton/ReviewChangesButton.tsx","../../src/desk/panes/document/statusBar/sparkline/DocumentSparkline.tsx","../../src/desk/panes/document/statusBar/DocumentStatusBar.tsx","../../src/desk/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/desk/panes/document/DocumentPane.tsx","../../src/desk/components/deskTool/NoDocumentTypesScreen.tsx","../../src/desk/components/deskTool/DeskTool.tsx","../../src/desk/components/deskTool/DeskToolBoundary.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.ReactElement | (() => React.ReactElement)\n  ms?: number\n}): React.ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import React from 'react'\nimport {\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: DocumentActionProps\n  children: (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderActionCollectionState = (props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete} = props\n\n  return (\n    <GetHookCollectionState onReset={onActionComplete} hooks={actions} args={actionProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n","import React from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  onActionComplete?: () => void\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = (props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps, ...rest} = props\n\n  return (\n    <GetHookCollectionState {...rest} hooks={badges} args={badgeProps}>\n      {children}\n    </GetHookCollectionState>\n  )\n}\n","import {omit} from 'lodash'\nimport React, {useCallback, useMemo} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {RouterPaneGroup, RouterPanes, RouterPaneSibling} from '../../types'\nimport {ChildLink} from './ChildLink'\nimport {BackLink} from './BackLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {PaneRouterContextValue} from './types'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: React.ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent} = useRouter()\n  const routerState = useRouterState()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes]\n  )\n\n  const groupIndex = index - 1\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...(routerState || {}), panes: nextPanes}\n\n      setTimeout(() => navigate(nextRouterState), 0)\n\n      return nextRouterState\n    },\n    [groupIndex, navigate, routerPaneGroups, routerState, siblingIndex]\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex]\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex]\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {template: template.id, parentRefPath: pathToString(parentRefPath), type},\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups]\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      BackLink,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings\n        )\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      handleEditReference,\n      modifyCurrentGroup,\n      navigateIntent,\n      params,\n      payload,\n      routerPaneGroups,\n      setParams,\n      setPayload,\n      siblingIndex,\n    ]\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {PaneConfigOpts, PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {PaneConfigOpts, PaneData, PaneResizeCache, PaneResizeData} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {CardProps, useElementRect} from '@sanity/ui'\nimport React, {useMemo, useState, useEffect} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, PaneLayoutState} from './paneLayoutController'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const controller = useMemo(() => createPaneLayoutController(), [])\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing]\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {RouterPaneSiblingContext} from '../types'\n\nexport interface PaneResolutionErrorOptions {\n  message: string\n  context?: RouterPaneSiblingContext\n  helpId?: string\n  cause?: Error\n}\n\n/**\n * An error thrown during pane resolving. This error is meant to be bubbled up\n * through react and handled in an error boundary. It includes a `cause`\n * property which is the original error caught\n */\nexport class PaneResolutionError extends Error {\n  cause: Error | undefined\n  context: RouterPaneSiblingContext | undefined\n  helpId: string | undefined\n\n  constructor({message, context, helpId, cause}: PaneResolutionErrorOptions) {\n    super(message)\n    this.context = context\n    this.helpId = helpId\n    this.cause = cause\n  }\n}\n","import {nanoid} from 'nanoid'\n\n// `WeakMap`s require the first type param to extend `object`\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst randomIdCache = new WeakMap<object, string>()\n\n/**\n * given an object, this function randomly generates an ID and returns it. this\n * result is then saved in a WeakMap so subsequent requests for the same object\n * will receive the same ID\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function assignId(obj: object): string {\n  const cachedValue = randomIdCache.get(obj)\n  if (cachedValue) return cachedValue\n\n  const id = nanoid()\n  randomIdCache.set(obj, id)\n  return id\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n\n// `WeakMap`s require the first type param to extend `object`\nconst bindCache = new WeakMap<object, Map<string, Function>>()\n\n/**\n * An alternative to `obj.method.bind(obj)` that utilizes a weakmap to return\n * the same memory reference for sequent binds.\n */\nexport function memoBind<\n  T extends object,\n  K extends keyof {[P in keyof T]: T[P] extends Function ? T[P] : never}\n>(obj: T, methodKey: K): T[K]\nexport function memoBind(obj: Record<string, unknown>, methodKey: string): Function {\n  const boundMethods = bindCache.get(obj) || new Map<string, Function>()\n  if (boundMethods) {\n    const bound = boundMethods.get(methodKey)\n    if (bound) return bound\n  }\n\n  const method = obj[methodKey]\n\n  if (typeof method !== 'function') {\n    throw new Error(\n      `Expected property \\`${methodKey}\\` to be a function but got ${typeof method} instead.`\n    )\n  }\n\n  const bound = method.bind(obj)\n  boundMethods.set(methodKey, bound)\n  bindCache.set(obj, boundMethods)\n\n  return bound\n}\n","import {from, isObservable, Observable, of as observableOf, Subscribable} from 'rxjs'\n\nimport {publishReplay, refCount, switchMap} from 'rxjs/operators'\n\nimport {PaneNode, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {PaneResolutionError} from './PaneResolutionError'\nimport {isRecord} from 'sanity'\n\ninterface Serializable {\n  serialize: (...args: never[]) => unknown\n}\n\nconst isPromise = (thing: any): thing is PromiseLike<unknown> => {\n  return !!thing && typeof thing?.then === 'function'\n}\nconst isSerializable = (thing: unknown): thing is Serializable => {\n  if (!isRecord(thing)) return false\n  return typeof thing.serialize === 'function'\n}\n\n/**\n * The signature of the function used to take an `UnresolvedPaneNode` and turn\n * it into an `Observable<PaneNode>`.\n */\nexport type PaneResolver = (\n  unresolvedPane: UnresolvedPaneNode | undefined,\n  context: RouterPaneSiblingContext,\n  flatIndex: number\n) => Observable<PaneNode>\n\nexport type PaneResolverMiddleware = (paneResolveFn: PaneResolver) => PaneResolver\n\nconst rethrowWithPaneResolutionErrors: PaneResolverMiddleware =\n  (next) => (unresolvedPane, context, flatIndex) => {\n    try {\n      return next(unresolvedPane, context, flatIndex)\n    } catch (e) {\n      // re-throw errors that are already `PaneResolutionError`s\n      if (e instanceof PaneResolutionError) {\n        throw e\n      }\n\n      // anything else, wrap with `PaneResolutionError` and set the underlying\n      // error as a the `cause`\n      throw new PaneResolutionError({\n        message: typeof e?.message === 'string' ? e.message : '',\n        context,\n        cause: e,\n      })\n    }\n  }\n\nconst wrapWithPublishReplay: PaneResolverMiddleware =\n  (next) =>\n  (...args) => {\n    return next(...args).pipe(\n      // need to add publishReplay + refCount to ensure new subscribers always\n      // get an emission. without this, memoized observables may get stuck\n      // waiting for their first emissions resulting in a loading pane\n      publishReplay(1),\n      refCount()\n    )\n  }\n\nexport function createPaneResolver(middleware: PaneResolverMiddleware): PaneResolver {\n  // note: this API includes a middleware/wrapper function because the function\n  // is recursive. we want to call the wrapped version of the function always\n  // (even inside of nested calls) so the identifier invoked for the recursion\n  // should be the wrapped version\n  const resolvePane = rethrowWithPaneResolutionErrors(\n    wrapWithPublishReplay(\n      middleware((unresolvedPane, context, flatIndex) => {\n        if (!unresolvedPane) {\n          throw new PaneResolutionError({\n            message: 'Pane returned no child',\n            context,\n            helpId: 'structure-item-returned-no-child',\n          })\n        }\n\n        if (isPromise(unresolvedPane) || isObservable(unresolvedPane)) {\n          return from(unresolvedPane).pipe(\n            switchMap((result) => resolvePane(result, context, flatIndex))\n          )\n        }\n\n        if (isSerializable(unresolvedPane)) {\n          return resolvePane(unresolvedPane.serialize(context), context, flatIndex)\n        }\n\n        if (typeof unresolvedPane === 'function') {\n          return resolvePane(unresolvedPane(context.id, context), context, flatIndex)\n        }\n\n        return observableOf(unresolvedPane)\n      })\n    )\n  )\n\n  return resolvePane\n}\n","import {omit} from 'lodash'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {first} from 'rxjs/operators'\nimport {PaneNode, RouterPanes, RouterPaneSiblingContext, UnresolvedPaneNode} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {memoBind} from './memoBind'\nimport {createPaneResolver, PaneResolverMiddleware} from './createPaneResolver'\n\ninterface TraverseOptions {\n  unresolvedPane: UnresolvedPaneNode | undefined\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  parent: PaneNode | null\n  path: string[]\n  currentId: string\n  flatIndex: number\n  levelIndex: number\n  structureContext: StructureContext\n}\n\nexport interface ResolveIntentOptions {\n  rootPaneNode?: UnresolvedPaneNode\n  intent: string\n  params: {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n  structureContext: StructureContext\n}\n\n/**\n * Resolves an intent request using breadth first search. If a match is not\n * found, the intent will resolve to the fallback editor.\n *\n * A match is found if:\n * 1. the `PaneNode` is of type `document` and the its ID matches the intent ID\n * 2. the `PaneNode` is of type `documentList` and the `schemaTypeName` matches\n * 3. the `PaneNode`'s `canHandleIntent` method returns true\n *\n * If a `PaneNode` of type `list` is found, it will be searched for a match.\n *\n * @see PaneNode\n */\nexport async function resolveIntent(options: ResolveIntentOptions): Promise<RouterPanes> {\n  const resolvedPaneCache = new Map<string, Observable<PaneNode>>()\n\n  // this is a simple version of the memoizer in `createResolvedPaneNodeStream`\n  const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n    const key = unresolvedPane && `${assignId(unresolvedPane)}-${context.path.join('__')}`\n    const cachedResolvedPane = key && resolvedPaneCache.get(key)\n    if (cachedResolvedPane) return cachedResolvedPane\n\n    const result = nextFn(unresolvedPane, context, flatIndex)\n    if (key) resolvedPaneCache.set(key, result)\n    return result\n  }\n\n  const resolvePane = createPaneResolver(memoize)\n\n  const fallbackEditorPanes: RouterPanes = [\n    [\n      {\n        id: `__edit__${options.params.id}`,\n        params: {...omit(options.params, ['id']), type: options.params.type},\n        payload: options.payload,\n      },\n    ],\n  ]\n\n  async function traverse({\n    currentId,\n    flatIndex,\n    intent,\n    params,\n    parent,\n    path,\n    payload,\n    unresolvedPane,\n    levelIndex,\n    structureContext,\n  }: TraverseOptions): Promise<\n    Array<{panes: RouterPanes; depthIndex: number; levelIndex: number}>\n  > {\n    if (!unresolvedPane) return []\n\n    const {id: targetId, type: schemaTypeName, ...otherParams} = params\n    const context: RouterPaneSiblingContext = {\n      id: currentId,\n      splitIndex: 0,\n      parent,\n      path,\n      index: flatIndex,\n      params: {},\n      payload: undefined,\n      structureContext,\n    }\n    const resolvedPane = await firstValueFrom(resolvePane(unresolvedPane, context, flatIndex))\n\n    // if the resolved pane is a document pane and the pane's ID matches then\n    // resolve the intent to the current path\n    if (resolvedPane.type === 'document' && resolvedPane.id === targetId) {\n      return [\n        {\n          panes: [\n            ...path.slice(0, path.length - 1).map((i) => [{id: i}]),\n            [{id: targetId, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `getIntentState.ts`\n    if (\n      // if the resolve pane's `canHandleIntent` returns true, then resolve\n      resolvedPane.canHandleIntent?.(intent, params, {\n        pane: resolvedPane,\n        index: flatIndex,\n      }) ||\n      // if the pane's `canHandleIntent` did not return true, then match against\n      // this default case. we will resolve the intent if:\n      (resolvedPane.type === 'documentList' &&\n        // 1. the schema type matches (this required for the document to render)\n        resolvedPane.schemaTypeName === schemaTypeName &&\n        // 2. the filter is the default filter.\n        //\n        // NOTE: this case is to prevent false positive matches where the user\n        // has configured a more specific filter for a particular type. In that\n        // case, the user can implement their own `canHandleIntent` function\n        resolvedPane.options.filter === '_type == $type')\n    ) {\n      return [\n        {\n          panes: [\n            // map the current path to router panes\n            ...path.map((id) => [{id}]),\n            // then augment with the intents IDs and params\n            [{id: params.id, params: otherParams, payload}],\n          ],\n          depthIndex: path.length,\n          levelIndex,\n        },\n      ]\n    }\n\n    if (resolvedPane.type === 'list' && resolvedPane.child && resolvedPane.items) {\n      return (\n        await Promise.all(\n          resolvedPane.items.map((item, nextLevelIndex) => {\n            if (item.type === 'divider') return Promise.resolve([])\n\n            return traverse({\n              currentId: item._id || item.id,\n              flatIndex: flatIndex + 1,\n              intent,\n              params,\n              parent: resolvedPane,\n              path: [...path, item.id],\n              payload,\n              unresolvedPane:\n                typeof resolvedPane.child === 'function'\n                  ? memoBind(resolvedPane, 'child')\n                  : resolvedPane.child,\n              levelIndex: nextLevelIndex,\n              structureContext,\n            })\n          })\n        )\n      ).flat()\n    }\n\n    return []\n  }\n\n  const matchingPanes = await traverse({\n    currentId: 'root',\n    flatIndex: 0,\n    levelIndex: 0,\n    intent: options.intent,\n    params: options.params,\n    parent: null,\n    path: [],\n    payload: options.payload,\n    unresolvedPane: options.rootPaneNode,\n    structureContext: options.structureContext,\n  })\n\n  const closestPaneToRoot = matchingPanes.sort((a, b) => {\n    // break ties with the level index\n    if (a.depthIndex === b.depthIndex) return a.levelIndex - b.levelIndex\n    return a.depthIndex - b.depthIndex\n  })[0]\n\n  if (closestPaneToRoot) {\n    return closestPaneToRoot.panes\n  }\n\n  return fallbackEditorPanes\n}\n","import {useContext} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {DeskToolContextValue} from './types'\n\nexport function useDeskTool(): DeskToolContextValue {\n  const deskTool = useContext(DeskToolContext)\n\n  if (!deskTool) throw new Error(`DeskTool: missing context value`)\n\n  return deskTool\n}\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {isEqual} from 'lodash'\nimport {Observable, NEVER, of as observableOf, concat} from 'rxjs'\nimport {switchMap, map, scan, distinctUntilChanged, pairwise, startWith} from 'rxjs/operators'\nimport {\n  DocumentPaneNode,\n  PaneNode,\n  RouterPaneSiblingContext,\n  RouterPanes,\n  RouterPaneSibling,\n  PaneNodeResolver,\n  UnresolvedPaneNode,\n} from '../types'\nimport {StructureContext} from '../structureBuilder'\nimport {assignId} from './assignId'\nimport {createPaneResolver, PaneResolver, PaneResolverMiddleware} from './createPaneResolver'\nimport {memoBind} from './memoBind'\nimport {PaneResolutionError} from './PaneResolutionError'\n\n/**\n * the fallback editor child that is implicitly inserted into the structure tree\n * if the id starts with `__edit__`\n */\nconst fallbackEditorChild: PaneNodeResolver = (nodeId, context): DocumentPaneNode => {\n  const id = nodeId.replace(/^__edit__/, '')\n  const {\n    params,\n    payload,\n    structureContext: {resolveDocumentNode},\n  } = context\n  const {type, template} = params\n\n  if (!type) {\n    throw new Error(\n      `Document type for document with ID ${id} was not provided in the router params.`\n    )\n  }\n\n  let defaultDocumentBuilder = resolveDocumentNode({schemaType: type, documentId: id})\n\n  defaultDocumentBuilder = defaultDocumentBuilder.id('editor').title('Editor')\n\n  if (template) {\n    defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(\n      template,\n      payload as {[key: string]: unknown}\n    )\n  }\n\n  return defaultDocumentBuilder.serialize() as DocumentPaneNode\n}\n\n/**\n * takes in a `RouterPaneSiblingContext` and returns a normalized string\n * representation that can be used for comparisons\n */\nfunction hashContext(context: RouterPaneSiblingContext): string {\n  return `contextHash(${JSON.stringify({\n    id: context.id,\n    parentId: parent && assignId(parent),\n    path: context.path,\n    index: context.index,\n    splitIndex: context.splitIndex,\n    serializeOptionsIndex: context.serializeOptions?.index,\n    serializeOptionsPath: context.serializeOptions?.path,\n  })})`\n}\n\n/**\n * takes in `ResolvedPaneMeta` and returns a normalized string representation\n * that can be used for comparisons\n */\nconst hashResolvedPaneMeta = (meta: ResolvedPaneMeta): string => {\n  const normalized = {\n    type: meta.type,\n    id: meta.routerPaneSibling.id,\n    params: meta.routerPaneSibling.params || {},\n    payload: meta.routerPaneSibling.payload || null,\n    flatIndex: meta.flatIndex,\n    groupIndex: meta.groupIndex,\n    siblingIndex: meta.siblingIndex,\n    path: meta.path,\n    paneNode: meta.type === 'resolvedMeta' ? assignId(meta.paneNode) : null,\n  }\n\n  return `metaHash(${JSON.stringify(normalized)})`\n}\n\n/**\n * Represents one flattened \"router pane\", including the source group and\n * sibling indexes.\n *\n * @see RouterPanes\n */\ninterface FlattenedRouterPane {\n  routerPaneSibling: RouterPaneSibling\n  flatIndex: number\n  groupIndex: number\n  siblingIndex: number\n}\n\n/**\n * The state of the accumulator used to store and manage memo cache state\n */\ninterface CacheState {\n  /**\n   * Holds the memoization results keyed by a combination of `assignId` and a\n   * context hash.\n   */\n  resolvedPaneCache: Map<string, Observable<PaneNode>>\n  /**\n   * Acts as a dictionary that stores cache keys by their flat index. This is\n   * used to clean up the cache between different branches in the pane\n   * structure.\n   *\n   * @see createResolvedPaneNodeStream look inside the `scan` where `wrapFn` is\n   * defined\n   */\n  cacheKeysByFlatIndex: Array<Set<string>>\n  /**\n   * The resulting memoized `PaneResolver` function. This function closes over\n   * the `resolvedPaneCache`.\n   */\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n}\n\nexport interface CreateResolvedPaneNodeStreamOptions {\n  /**\n   * an input stream of `RouterPanes`\n   * @see RouterPanes\n   */\n  routerPanesStream: Observable<RouterPanes>\n  /**\n   * any `UnresolvedPaneNode` (could be an observable, promise, pane resolver etc)\n   */\n  rootPaneNode: UnresolvedPaneNode\n  /** used primarily for testing */\n  initialCacheState?: CacheState\n\n  structureContext: StructureContext\n}\n\n/**\n * The result of pane resolving\n */\nexport type ResolvedPaneMeta = {\n  groupIndex: number\n  siblingIndex: number\n  flatIndex: number\n  routerPaneSibling: RouterPaneSibling\n  path: string[]\n} & ({type: 'loading'; paneNode: null} | {type: 'resolvedMeta'; paneNode: PaneNode})\n\ninterface ResolvePaneTreeOptions {\n  resolvePane: PaneResolver\n  flattenedRouterPanes: FlattenedRouterPane[]\n  unresolvedPane: UnresolvedPaneNode | undefined\n  parent: PaneNode | null\n  path: string[]\n  structureContext: StructureContext\n}\n\n/**\n * A recursive pane resolving function. Starts at one unresolved pane node and\n * continues until there is no more flattened router panes that can be used as\n * input to the unresolved panes.\n */\nfunction resolvePaneTree({\n  unresolvedPane,\n  flattenedRouterPanes,\n  parent,\n  path,\n  resolvePane,\n  structureContext,\n}: ResolvePaneTreeOptions): Observable<ResolvedPaneMeta[]> {\n  const [current, ...rest] = flattenedRouterPanes\n  const next = rest[0] as FlattenedRouterPane | undefined\n\n  const context: RouterPaneSiblingContext = {\n    id: current.routerPaneSibling.id,\n    splitIndex: current.siblingIndex,\n    parent,\n    path: [...path, current.routerPaneSibling.id],\n    index: current.flatIndex,\n    params: current.routerPaneSibling.params || {},\n    payload: current.routerPaneSibling.payload,\n    structureContext,\n  }\n\n  try {\n    return resolvePane(unresolvedPane, context, current.flatIndex).pipe(\n      // this switch map receives a resolved pane\n      switchMap((paneNode) => {\n        // we can create a `resolvedMeta` type using it\n        const resolvedPaneMeta: ResolvedPaneMeta = {\n          type: 'resolvedMeta',\n          ...current,\n          paneNode: paneNode,\n          path: context.path,\n        }\n\n        // for the other unresolved panes, we can create \"loading panes\"\n        const loadingPanes = rest.map((i, restIndex) => {\n          const loadingPanePath = [\n            ...context.path,\n            ...rest.slice(restIndex).map((_, currentIndex) => `[${i.flatIndex + currentIndex}]`),\n          ]\n\n          const loadingPane: ResolvedPaneMeta = {\n            type: 'loading',\n            path: loadingPanePath,\n            paneNode: null,\n            ...i,\n          }\n\n          return loadingPane\n        })\n\n        if (!rest.length) {\n          return observableOf([resolvedPaneMeta])\n        }\n\n        let nextStream\n\n        if (\n          // the fallback editor case\n          next?.routerPaneSibling.id.startsWith('__edit__')\n        ) {\n          nextStream = resolvePaneTree({\n            unresolvedPane: fallbackEditorChild,\n            flattenedRouterPanes: rest,\n            parent,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        } else if (current.groupIndex === next?.groupIndex) {\n          // if the next flattened router pane has the same group index as the\n          // current flattened router pane, then the next flattened router pane\n          // belongs to the same group (i.e. it is a split pane)\n          nextStream = resolvePaneTree({\n            unresolvedPane,\n            flattenedRouterPanes: rest,\n            parent,\n            path,\n            resolvePane,\n            structureContext,\n          })\n        } else {\n          // normal children resolving\n          nextStream = resolvePaneTree({\n            unresolvedPane:\n              typeof paneNode.child === 'function'\n                ? (memoBind(paneNode, 'child') as PaneNodeResolver)\n                : paneNode.child,\n            flattenedRouterPanes: rest,\n            parent: paneNode,\n            path: context.path,\n            resolvePane,\n            structureContext,\n          })\n        }\n\n        return concat(\n          // we emit the loading panes first in a concat (this emits immediately)\n          observableOf([resolvedPaneMeta, ...loadingPanes]),\n          // then whenever the next stream is done, the results will be combined.\n          nextStream.pipe(map((nextResolvedPanes) => [resolvedPaneMeta, ...nextResolvedPanes]))\n        )\n      })\n    )\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      if (e.context) {\n        console.warn(\n          `Pane resolution error at index ${e.context.index}${\n            e.context.splitIndex > 0 ? ` for split pane index ${e.context.splitIndex}` : ''\n          }: ${e.message}${e.helpId ? ` - see ${generateHelpUrl(e.helpId)}` : ''}`,\n          e\n        )\n      }\n\n      if (e.helpId === 'structure-item-returned-no-child') {\n        // returning an observable of an empty array will remove loading panes\n        // note: this one intentionally does not throw\n        return observableOf([])\n      }\n    }\n\n    throw e\n  }\n}\n\n/**\n * Takes in a stream of `RouterPanes` and an unresolved root pane and returns\n * a stream of `ResolvedPaneMeta`\n */\nexport function createResolvedPaneNodeStream({\n  routerPanesStream,\n  rootPaneNode,\n  initialCacheState = {\n    cacheKeysByFlatIndex: [],\n    flattenedRouterPanes: [],\n    resolvedPaneCache: new Map(),\n    resolvePane: () => NEVER,\n  },\n  structureContext,\n}: CreateResolvedPaneNodeStreamOptions): Observable<ResolvedPaneMeta[]> {\n  const resolvedPanes$ = routerPanesStream.pipe(\n    // add in implicit \"root\" router pane\n    map((rawRouterPanes) => [[{id: 'root'}], ...rawRouterPanes]),\n    // create flattened router panes\n    map((routerPanes) => {\n      const flattenedRouterPanes: FlattenedRouterPane[] = routerPanes\n        .flatMap((routerPaneGroup, groupIndex) =>\n          routerPaneGroup.map((routerPaneSibling, siblingIndex) => ({\n            routerPaneSibling,\n            groupIndex,\n            siblingIndex,\n          }))\n        )\n        // add in the flat index\n        .map((i, index) => ({...i, flatIndex: index}))\n\n      return flattenedRouterPanes\n    }),\n    // calculate a \"diffIndex\" used for clearing the memo cache\n    startWith([] as FlattenedRouterPane[]),\n    pairwise(),\n    map(([prev, curr]) => {\n      for (let i = 0; i < curr.length; i++) {\n        const prevValue = prev[i]\n        const currValue = curr[i]\n\n        if (!isEqual(prevValue, currValue)) {\n          return {\n            flattenedRouterPanes: curr,\n            diffIndex: i,\n          }\n        }\n      }\n\n      return {\n        flattenedRouterPanes: curr,\n        diffIndex: curr.length,\n      }\n    }),\n    // create the memoized `resolvePane` function and manage the memo cache\n    scan((acc, next) => {\n      const {cacheKeysByFlatIndex, resolvedPaneCache} = acc\n      const {flattenedRouterPanes, diffIndex} = next\n\n      // use the `cacheKeysByFlatIndex` like a dictionary to find cache keys to\n      // and cache keys to delete\n      const beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1)\n      const afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1)\n\n      const keysToKeep = new Set(beforeDiffIndex.flatMap((keySet) => Array.from(keySet)))\n      const keysToDelete = afterDiffIndex\n        .flatMap((keySet) => Array.from(keySet))\n        .filter((key) => !keysToKeep.has(key))\n\n      for (const key of keysToDelete) {\n        resolvedPaneCache.delete(key)\n      }\n\n      // create a memoizing pane resolver middleware that utilizes the cache\n      // maintained above. this keeps the cache from growing indefinitely\n      const memoize: PaneResolverMiddleware = (nextFn) => (unresolvedPane, context, flatIndex) => {\n        const key = unresolvedPane && `${assignId(unresolvedPane)}-${hashContext(context)}`\n        const cachedResolvedPane = key && resolvedPaneCache.get(key)\n        if (cachedResolvedPane) return cachedResolvedPane\n\n        const result = nextFn(unresolvedPane, context, flatIndex)\n        if (!key) return result\n\n        const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || new Set()\n        cacheKeySet.add(key)\n        cacheKeysByFlatIndex[flatIndex] = cacheKeySet\n        resolvedPaneCache.set(key, result)\n        return result\n      }\n\n      return {\n        flattenedRouterPanes,\n        cacheKeysByFlatIndex,\n        resolvedPaneCache,\n        resolvePane: createPaneResolver(memoize),\n      }\n    }, initialCacheState),\n    // run the memoized, recursive resolving\n    switchMap(({flattenedRouterPanes, resolvePane}) =>\n      resolvePaneTree({\n        unresolvedPane: rootPaneNode,\n        flattenedRouterPanes,\n        parent: null,\n        path: [],\n        resolvePane,\n        structureContext,\n      })\n    )\n  )\n\n  // after we've created a stream of `ResolvedPaneMeta[]`, we need to clean up\n  // the results to remove unwanted loading panes and prevent unnecessary\n  // emissions\n  return resolvedPanes$.pipe(\n    // this diffs the previous emission with the current one. if there is a new\n    // loading pane at the same position where a previous pane already had a\n    // resolved value (looking at the IDs to compare), then return the previous\n    // pane instead of the loading pane\n    scan(\n      (prev, next) =>\n        next.map((nextPane, index) => {\n          const prevPane = prev[index] as ResolvedPaneMeta | undefined\n          if (!prevPane) return nextPane\n          if (nextPane.type !== 'loading') return nextPane\n\n          if (prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id) {\n            return prevPane\n          }\n          return nextPane\n        }),\n      [] as ResolvedPaneMeta[]\n    ),\n    // this prevents duplicate emissions\n    distinctUntilChanged((prev, next) => {\n      if (prev.length !== next.length) return false\n\n      for (let i = 0; i < next.length; i++) {\n        const prevValue = prev[i]\n        const nextValue = next[i]\n        if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) {\n          return false\n        }\n      }\n\n      return true\n    })\n  )\n}\n","import {useEffect, useMemo, useState} from 'react'\nimport {ReplaySubject} from 'rxjs'\nimport {map} from 'rxjs/operators'\nimport {LOADING_PANE} from '../constants'\nimport {RouterPanes, PaneNode, RouterPaneGroup} from '../types'\nimport {useDeskTool} from '../useDeskTool'\nimport {createResolvedPaneNodeStream} from './createResolvedPaneNodeStream'\nimport {RouterState, useRouter} from 'sanity/router'\n\ninterface PaneData {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  key: string\n  pane: PaneNode | typeof LOADING_PANE\n  params: Record<string, string | undefined>\n  path: string\n  payload: unknown\n  selected: boolean\n  siblingIndex: number\n}\n\ninterface Panes {\n  paneDataItems: PaneData[]\n  routerPanes: RouterPanes\n  resolvedPanes: (PaneNode | typeof LOADING_PANE)[]\n}\n\nfunction useRouterPanesStream() {\n  const routerStateSubject = useMemo(() => new ReplaySubject<RouterState>(1), [])\n  const routerPanes$ = useMemo(\n    () =>\n      routerStateSubject\n        .asObservable()\n        .pipe(map((_routerState) => (_routerState?.panes || []) as RouterPanes)),\n    [routerStateSubject]\n  )\n  const {state: routerState} = useRouter()\n  useEffect(() => {\n    routerStateSubject.next(routerState)\n  }, [routerState, routerStateSubject])\n\n  return routerPanes$\n}\n\nexport function useResolvedPanes(): Panes {\n  // used to propagate errors from async effect. throwing inside of the render\n  // will bubble the error to react where it can be picked up by standard error\n  // boundaries\n  const [error, setError] = useState<unknown>()\n  if (error) throw error\n\n  const {structureContext, rootPaneNode} = useDeskTool()\n\n  const [data, setData] = useState<Panes>({\n    paneDataItems: [],\n    resolvedPanes: [],\n    routerPanes: [],\n  })\n\n  const routerPanesStream = useRouterPanesStream()\n\n  useEffect(() => {\n    const resolvedPanes$ = createResolvedPaneNodeStream({\n      rootPaneNode,\n      routerPanesStream,\n      structureContext,\n    }).pipe(\n      map((resolvedPanes) => {\n        const routerPanes = resolvedPanes.reduce<RouterPanes>((acc, next) => {\n          const currentGroup = acc[next.groupIndex] || []\n          currentGroup[next.siblingIndex] = next.routerPaneSibling\n          acc[next.groupIndex] = currentGroup\n          return acc\n        }, [])\n\n        const groupsLen = routerPanes.length\n\n        const paneDataItems = resolvedPanes.map((pane) => {\n          const {groupIndex, flatIndex, siblingIndex, routerPaneSibling, path} = pane\n          const itemId = routerPaneSibling.id\n          const nextGroup = routerPanes[groupIndex + 1] as RouterPaneGroup | undefined\n\n          const paneDataItem: PaneData = {\n            active: groupIndex === groupsLen - 2,\n            childItemId: nextGroup?.[0].id ?? null,\n            index: flatIndex,\n            itemId: routerPaneSibling.id,\n            groupIndex,\n            key: `${\n              pane.type === 'loading' ? 'unknown' : pane.paneNode.id\n            }-${itemId}-${siblingIndex}`,\n            pane: pane.type === 'loading' ? LOADING_PANE : pane.paneNode,\n            params: routerPaneSibling.params || {},\n            path: path.join(';'),\n            payload: routerPaneSibling.payload,\n            selected: flatIndex === resolvedPanes.length - 1,\n            siblingIndex,\n          }\n\n          return paneDataItem\n        })\n\n        return {\n          paneDataItems,\n          routerPanes,\n          resolvedPanes: paneDataItems.map((pane) => pane.pane),\n        }\n      })\n    )\n\n    const subscription = resolvedPanes$.subscribe({\n      next: (result) => setData(result),\n      error: (e) => setError(e),\n    })\n\n    return () => subscription.unsubscribe()\n  }, [rootPaneNode, routerPanesStream, structureContext])\n\n  return data\n}\n","import {Box, Card, Flex, Spinner, Text} from '@sanity/ui'\nimport React, {useEffect} from 'react'\nimport {RouterPanes} from '../../../types'\nimport {Delay} from '../../Delay'\nimport {useRouter} from 'sanity/router'\n\ninterface RedirectProps {\n  panes: RouterPanes\n}\n\nexport function Redirect({panes}: RedirectProps) {\n  const {navigate} = useRouter()\n\n  useEffect(() => {\n    // Navigates to passed router panes state on mount\n    navigate({panes}, {replace: true})\n  }, [navigate, panes])\n\n  return (\n    <Card height=\"fill\">\n      <Delay ms={300}>\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Spinner muted />\n          <Box marginTop={3}>\n            <Text muted size={1}>\n              Redirecting…\n            </Text>\n          </Box>\n        </Flex>\n      </Delay>\n    </Card>\n  )\n}\n","import {uuid} from '@sanity/uuid'\nimport {first} from 'rxjs/operators'\nimport {firstValueFrom, Observable} from 'rxjs'\nimport {PaneResolutionError} from '../../../structureResolvers'\nimport {getPublishedId, DocumentStore} from 'sanity'\n\nexport function removeDraftPrefix(documentId: string): string {\n  const publishedId = getPublishedId(documentId)\n\n  if (publishedId !== documentId) {\n    console.warn(\n      'Removed unexpected draft id in document link: All links to documents should have the ' +\n        '`drafts.`-prefix removed and something appears to have made an intent link to `%s`',\n      documentId\n    )\n  }\n\n  return publishedId\n}\n\nexport async function ensureDocumentIdAndType(\n  documentStore: DocumentStore,\n  id: string | undefined,\n  type: string | undefined\n): Promise<{id: string; type: string}> {\n  if (id && type) return {id, type}\n  if (!id && type) return {id: uuid(), type}\n  if (id && !type) {\n    const resolvedType = await firstValueFrom(\n      documentStore.resolveTypeForDocument(id) as Observable<string>\n    )\n\n    return {id, type: resolvedType}\n  }\n\n  throw new PaneResolutionError({\n    message: 'Neither document `id` or `type` was provided when trying to resolve intent.',\n  })\n}\n","import {Box, Card, Flex, Spinner, Text} from '@sanity/ui'\nimport React, {useEffect, useState} from 'react'\nimport {resolveIntent} from '../../../structureResolvers'\nimport {RouterPanes} from '../../../types'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {Delay} from '../../Delay'\nimport {Redirect} from './Redirect'\nimport {ensureDocumentIdAndType} from './utils'\nimport {useDocumentStore, useUnique} from 'sanity'\n\nexport interface IntentResolverProps {\n  intent: string\n  params: Record<string, unknown> // {type: string; id: string; [key: string]: string | undefined}\n  payload: unknown\n}\n\n/**\n * A component that receives an intent from props and redirects to the resolved\n * intent location (while showing a loading spinner during the process)\n */\nexport function IntentResolver({\n  intent,\n  params: paramsProp = {},\n  payload: payloadProp,\n}: IntentResolverProps) {\n  const {rootPaneNode, structureContext} = useDeskTool()\n  const documentStore = useDocumentStore()\n  const params = useUnique(paramsProp)\n  const payload = useUnique(payloadProp)\n  const [nextRouterPanes, setNextRouterPanes] = useState<RouterPanes | null>(null)\n  const [error, setError] = useState<unknown>(null)\n  const idParam = typeof params.id === 'string' ? params.id : undefined\n  const typeParam = typeof params.type === 'string' ? params.type : undefined\n\n  useEffect(() => {\n    const cancelledRef = {current: false}\n\n    async function getNextRouterPanes() {\n      const {id, type} = await ensureDocumentIdAndType(documentStore, idParam, typeParam)\n\n      return resolveIntent({\n        intent,\n        params: {...params, id, type},\n        payload,\n        rootPaneNode,\n        structureContext,\n      })\n    }\n\n    getNextRouterPanes()\n      .then((result) => {\n        if (!cancelledRef.current) {\n          setNextRouterPanes(result)\n        }\n      })\n      .catch(setError)\n\n    return () => {\n      cancelledRef.current = true\n    }\n  }, [documentStore, idParam, intent, params, payload, rootPaneNode, structureContext, typeParam])\n\n  // throwing here bubbles the error up to the error boundary inside of the\n  // `DeskToolRoot` component\n  if (error) throw error\n  if (nextRouterPanes) return <Redirect panes={nextRouterPanes} />\n\n  return (\n    <Card height=\"fill\">\n      <Delay ms={300}>\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Spinner muted />\n          <Box marginTop={3}>\n            <Text align=\"center\" muted size={1}>\n              Loading…\n            </Text>\n          </Box>\n        </Flex>\n      </Delay>\n    </Card>\n  )\n}\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {Box, Button, Card, Code, Container, Heading, Label, Stack, Text} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport styled from 'styled-components'\nimport {SyncIcon} from '@sanity/icons'\nimport {SerializeError} from '../../structureBuilder'\nimport {PaneResolutionError} from '../../structureResolvers'\n\nconst PathSegment = styled.span`\n  &:not(:last-child)::after {\n    content: ' ➝ ';\n    opacity: 0.5;\n  }\n`\n\nfunction formatStack(stack: string) {\n  return (\n    stack\n      // Prettify builder functions\n      .replace(/\\(\\.\\.\\.\\)\\./g, '(...)\\n  .')\n      // Remove webpack cruft from function names\n      .replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, '')\n      // Remove default export postfix from function names\n      .replace(/___default\\./g, '.')\n      // Replace full host path, leave only path to JS-file\n      .replace(new RegExp(` \\\\(https?:\\\\/\\\\/${window.location.host}`, 'g'), ' (')\n  )\n}\n\ninterface StructureErrorProps {\n  error: unknown\n}\n\nexport function StructureError({error}: StructureErrorProps) {\n  if (!(error instanceof PaneResolutionError)) {\n    throw error\n  }\n  const {cause} = error\n\n  // Serialize errors are well-formatted and should be readable, in these cases a stack trace is\n  // usually not helpful. Build errors in dev (with HMR) usually also contains a bunch of garbage\n  // instead of an actual error message, so make sure we show the message in these cases as well\n  const stack = cause?.stack || error.stack\n  const showStack =\n    stack && !(cause instanceof SerializeError) && !error.message.includes('Module build failed:')\n\n  const path = cause instanceof SerializeError ? cause.path : []\n  const helpId = (cause instanceof SerializeError && cause.helpId) || error.helpId\n\n  const handleReload = useCallback(() => {\n    window.location.reload()\n  }, [])\n\n  return (\n    <Card height=\"fill\" overflow=\"auto\" padding={4} sizing=\"border\" tone=\"critical\">\n      <Container>\n        <Heading as=\"h2\">Encountered an error while reading structure</Heading>\n\n        <Card marginTop={4} padding={4} radius={2} overflow=\"auto\" shadow={1} tone=\"inherit\">\n          {path.length > 0 && (\n            <Stack space={2}>\n              <Label>Structure path</Label>\n              <Code>\n                {/* TODO: it seems like the path is off by one and includes */}\n                {/* `root` twice  */}\n                {path.slice(1).map((segment, i) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <PathSegment key={`${segment}-${i}`}>{segment}</PathSegment>\n                ))}\n              </Code>\n            </Stack>\n          )}\n\n          <Stack marginTop={4} space={2}>\n            <Label>Error</Label>\n            <Code>{showStack ? formatStack(stack) : error.message}</Code>\n          </Stack>\n\n          {helpId && (\n            <Box marginTop={4}>\n              <Text>\n                <a href={generateHelpUrl(helpId)} rel=\"noopener noreferrer\" target=\"_blank\">\n                  View documentation\n                </a>\n              </Text>\n            </Box>\n          )}\n\n          <Box marginTop={4}>\n            <Button text=\"Reload\" icon={SyncIcon} tone=\"primary\" onClick={handleReload} />\n          </Box>\n        </Card>\n      </Container>\n    </Card>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport React from 'react'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {isRecord} from 'sanity'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title=\"Unknown pane type\" />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              Structure item of type <code>{type}</code> is not a known entity.\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              Structure item is missing required <code>type</code> property.\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {Observable, of, merge} from 'rxjs'\nimport {mapTo, delay} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<string> {\n  const thresholds = [\n    {ms: 300, message: 'Loading…'},\n    {ms: 5000, message: 'Still loading…'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(...thresholds.map(({ms, message}) => src.pipe(mapTo(message), delay(ms))))\n}\n","import {Box, CardTone, Flex, Spinner, Text, _raf2} from '@sanity/ui'\nimport React, {memo, useMemo, useState, useEffect} from 'react'\nimport {Observable} from 'rxjs'\nimport styled from 'styled-components'\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {getWaitMessages} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<string>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE = 'Loading…'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return DEFAULT_MESSAGE\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe === 'function') return undefined\n\n    const sub = resolvedMessage.subscribe(setCurrentMessage)\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <Spinner muted />\n\n      {(title || currentMessage) && (\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            {title || currentMessage}\n          </Text>\n        </Box>\n      )}\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'LoadingPane'\n","import React, {memo, lazy, Suspense} from 'react'\nimport {isEqual} from 'lodash'\nimport {PaneNode} from '../types'\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {UnknownPane} from './unknown'\nimport {LoadingPane} from './loading'\n\ninterface DeskToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined>\n  payload: unknown\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document')),\n  documentList: lazy(() => import('./documentList')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const DeskToolPane = memo(\n  function DeskToolPane(props: DeskToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next}\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  }\n)\n","import React from 'react'\nimport {Box, CardTone} from '@sanity/ui'\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {children, flex, minWidth, paneKey, title = 'Error', tone = 'critical'} = props\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} tone={tone}>\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport React, {memo, useEffect, useRef} from 'react'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentOperationEvent} from 'sanity'\n\nfunction getOpErrorTitle(op: string): string {\n  if (op === 'delete') {\n    return `An error occurred while attempting to delete this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  if (op === 'unpublish') {\n    return `An error occurred while attempting to unpublish this document.\n      This usually means that there are other documents that refers to it.`\n  }\n  return `An error occurred during ${op}`\n}\n\nfunction getOpSuccessTitle(op: string): string {\n  if (op === 'publish') {\n    return `The document was published`\n  }\n  if (op === 'unpublish') {\n    return `The document was unpublished. A draft has been created from the latest published version.`\n  }\n  if (op === 'discardChanges') {\n    return `All changes since last publish has now been discarded. The discarded draft can still be recovered from history`\n  }\n  if (op === 'delete') {\n    return `This document was deleted. It can still be recovered from history and if you continue editing it will be recreated.`\n  }\n  return `Successfully performed ${op} on document`\n}\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType} = useDocumentPane()\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: getOpErrorTitle(event.op),\n        description: (\n          <details>\n            <summary>Details</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: getOpSuccessTitle(event.op),\n      })\n    }\n\n    prevEvent.current = event\n  }, [event, pushToast])\n\n  return null\n})\n","import {EarthAmericasIcon, BinaryDocumentIcon, RestoreIcon} from '@sanity/icons'\nimport {DeskToolFeatures, PaneMenuItem} from '../../types'\n\ninterface Params {\n  features: DeskToolFeatures\n  changesOpen: boolean\n  hasValue: boolean\n  previewUrl?: string | null\n}\n\nconst getHistoryMenuItem = (params: Params): PaneMenuItem | null => {\n  const {features, hasValue, changesOpen} = params\n\n  if (!features.reviewChanges) return null\n\n  return {\n    action: 'reviewChanges',\n    title: 'Review changes',\n    icon: RestoreIcon,\n    isDisabled: changesOpen || !hasValue,\n  }\n}\n\nconst getInspectItem = ({hasValue}: Params): PaneMenuItem => ({\n  action: 'inspect',\n  title: 'Inspect',\n  icon: BinaryDocumentIcon,\n  isDisabled: !hasValue,\n  shortcut: 'Ctrl+Alt+I',\n})\n\nexport const getProductionPreviewItem = ({previewUrl}: Params): PaneMenuItem | null => {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    title: 'Open preview',\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport const getMenuItems = (params: Params): PaneMenuItem[] => {\n  const items = [getProductionPreviewItem, getHistoryMenuItem, getInspectItem]\n    .filter(Boolean)\n    .map((fn) => fn(params))\n\n  return items.filter((i) => i !== null) as PaneMenuItem[]\n}\n","import {useEffect, useState} from 'react'\nimport {SanityDocument} from '@sanity/types'\nimport {useAsObservable} from 'react-rx'\nimport {debounceTime, switchMap, catchError} from 'rxjs/operators'\nimport {from, of} from 'rxjs'\nimport {useSource, isRecord} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined)\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        })\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n","import {Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import React, {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ObjectSchemaType, Path, SanityDocument, SanityDocumentLike} from '@sanity/types'\nimport {omit} from 'lodash'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport isHotkey from 'is-hotkey'\nimport {useMemoObservable} from 'react-rx'\nimport {isActionEnabled} from '@sanity/schema/_internal'\nimport {usePaneRouter} from '../../components'\nimport {PaneMenuItem} from '../../types'\nimport {useDeskTool} from '../../useDeskTool'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getMenuItems} from './menuItems'\nimport {DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentPresence,\n  PatchEvent,\n  StateTree,\n  toMutationPatches,\n  getExpandOperations,\n  getPublishedId,\n  isDev,\n  setAtPath,\n  useClient,\n  useConnectionState,\n  useDocumentOperation,\n  useEditState,\n  useFormState,\n  useHistoryStore,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useUnique,\n  useValidationStatus,\n  getDraftId,\n  useDocumentValuePermissions,\n} from 'sanity'\n\nconst emptyObject = {} as Record<string, string | undefined>\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey} = props\n  const client = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    actions: documentActions,\n    badges: documentBadges,\n    unstable_languageFilter: languageFilterResolver,\n  } = useSource().document\n  const historyStore = useHistoryStore()\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const {features} = useDeskTool()\n  const {push: pushToast} = useToast()\n  const {options, menuItemGroups, title = null, views: viewsProp = []} = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const paneParams = useUnique(paneRouter.params)\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: paneParams?.template,\n      }),\n    [documentType, paneOptions, paneParams, panePayload, templates]\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch}: any = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType]\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType]\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver]\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n  const params = paneRouter.params || emptyObject\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : []\n  )\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const timeline = useMemo(\n    () => historyStore.getTimeline({publishedId: documentId, enableTrace: isDev}),\n    [documentId, historyStore]\n  )\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {historyController} = useMemoObservable(\n    () => historyStore.getTimelineController({client, documentId, documentType, timeline}),\n    [client, documentId, documentType, timeline]\n  )!\n\n  // @todo: this will now happen on each render, but should be refactored so it happens only when\n  // the `rev`, `since` or `historyController` values change.\n  historyController.setRange(params.since || null, params.rev || null)\n  const changesOpen = historyController.changesPanelActive()\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const hasValue = Boolean(value)\n  const menuItems = useMemo(\n    () => getMenuItems({features, hasValue, changesOpen, previewUrl}),\n    [features, hasValue, changesOpen, previewUrl]\n  )\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? historyController.sinceAttributes()\n    : editState?.published || null\n  const ready = connectionState === 'connected' && editState.ready\n  const viewOlderVersion = historyController.onOlderRevision()\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () =>\n      viewOlderVersion\n        ? historyController.displayed() || {_id: value._id, _type: value._type}\n        : value,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [historyController, params.rev, params.since, value, viewOlderVersion]\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      paneRouter.setParams({\n        ...paneRouter.params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [paneRouter]\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path) => {\n      setFocusPath(nextFocusPath)\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n        },\n      ])\n    },\n    [documentId, presenceStore, setFocusPath]\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      setFocusPath([])\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [setFocusPath]\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: any) => patchRef.current(event), [])\n\n  const handleHistoryClose = useCallback(() => {\n    paneRouter.setParams({...params, since: undefined})\n  }, [paneRouter, params])\n\n  const handleHistoryOpen = useCallback(() => {\n    paneRouter.setParams({...params, since: '@lastPublished'})\n  }, [paneRouter, params])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        paneRouter.setParams({...params, inspect: 'on'})\n      } else {\n        paneRouter.setParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, paneRouter, params]\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      return false\n    },\n    [handleHistoryOpen, previewUrl, toggleInspect]\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            handleMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [handleMenuAction, menuItems]\n  )\n\n  const handleInspectClose = useCallback(() => toggleInspect(false), [toggleInspect])\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    []\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = useMemo(() => Boolean(schemaType?.liveEdit), [documentType, schema])\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n  const {revTime: rev} = historyController\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n\n    return (\n      !ready ||\n      rev !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting\n    )\n  }, [\n    connectionState,\n    isNonExistent,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    rev,\n    schemaType,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const handleOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef]\n  )\n\n  const documentPane: DocumentPaneContextValue = {\n    actions,\n    activeViewId,\n    badges,\n    changesOpen,\n    collapsedFieldSets,\n    collapsedPaths,\n    compareValue,\n    connectionState,\n    displayed,\n    documentId,\n    documentIdRaw,\n    documentType,\n    editState,\n    focusPath,\n    menuItems,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onPathOpen: handleOpenPath,\n    onHistoryClose: handleHistoryClose,\n    onHistoryOpen: handleHistoryOpen,\n    onInspectClose: handleInspectClose,\n    onKeyUp: handleKeyUp,\n    onMenuAction: handleMenuAction,\n    onPaneClose: handlePaneClose,\n    onPaneSplit: handlePaneSplit,\n    onSetActiveFieldGroup: handleSetActiveFieldGroup,\n    onSetCollapsedPath: handleOnSetCollapsedPath,\n    onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n    historyController,\n    index,\n    inspectOpen,\n    validation,\n    menuItemGroups: menuItemGroups || [],\n    paneKey,\n    previewUrl,\n    ready,\n    schemaType: schemaType!,\n    isPermissionsLoading,\n    permissions,\n    setTimelineMode,\n    setTimelineRange,\n    timeline,\n    timelineMode,\n    title,\n    value,\n    views,\n    formState,\n    unstable_languageFilter: languageFilter,\n  }\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/desk/reconnecting',\n        status: 'warning',\n        title: <>Connection lost. Reconnecting…</>,\n      })\n    }\n  }, [connectionState, pushToast])\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    // Reset focus path\n    setFocusPath(params.path ? pathFromString(params.path) : [])\n    onSetOpenPath([])\n  }, [params.path, documentId])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n","import {\n  TrashIcon,\n  EditIcon,\n  IconComponent,\n  PublishIcon,\n  UnpublishIcon,\n  CloseIcon,\n  AddCircleIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_LABELS: {[key: string]: string | undefined} = {\n  create: 'created',\n  delete: 'deleted',\n  discardDraft: 'discarded draft',\n  initial: 'created',\n  editDraft: 'edited',\n  editLive: 'live edited',\n  publish: 'published',\n  unpublish: 'unpublished',\n}\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {IconComponent} from '@sanity/icons'\nimport {TIMELINE_ICON_COMPONENTS, TIMELINE_LABELS} from './constants'\nimport {ChunkType, Chunk} from 'sanity'\n\nexport function formatTimelineEventLabel(type: ChunkType): string | undefined {\n  return TIMELINE_LABELS[type]\n}\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n\nexport function sinceTimelineProps(\n  since: Chunk,\n  rev: Chunk\n): {\n  topSelection: Chunk\n  bottomSelection: Chunk\n  disabledBeforeSelection: boolean\n} {\n  return {\n    topSelection: rev,\n    bottomSelection: since,\n    disabledBeforeSelection: true,\n  }\n}\n\nexport function revTimelineProps(rev: Chunk): {\n  topSelection: Chunk\n  bottomSelection: Chunk\n} {\n  return {\n    topSelection: rev,\n    bottomSelection: rev,\n  }\n}\n","import React from 'react'\nimport {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Text, Box, MenuItem, Theme, Flex, rem} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\nimport {TimelineItemState} from './types'\n\nexport interface IconWrapperProps {\n  theme: Theme\n}\n\nexport interface TimelineItemProps {\n  state: TimelineItemState\n  theme: Theme\n  isHovered: boolean\n}\n\nexport const IconWrapper = styled(Flex)(({theme}: IconWrapperProps) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(MenuItem)(({state = 'enabled', isHovered, theme}: TimelineItemProps) => {\n  const {color} = theme.sanity\n\n  const selectedState = color.button.default.primary.enabled\n  return css`\n    position: relative;\n    min-width: 244px;\n\n    ${state === 'selected' &&\n    css`\n      --card-bg-color: ${selectedState.bg};\n      --card-fg-color: ${selectedState.fg};\n      --card-muted-fg-color: ${selectedState.muted};\n      --card-border-color: ${selectedState.bg};\n      &:not([data-selection-bottom='true']) {\n        border-top-left-radius: 0;\n        border-top-right-radius: 0;\n      }\n    `}\n\n    ${state === 'withinSelection' &&\n    css`\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      box-shadow: 0px 3px 0px 0px var(--card-bg-color);\n      &:not([data-selection-top='true']) {\n        border-radius: 0;\n      }\n\n      ${IconWrapper} {\n        &::before {\n          background: var(--card-hairline-soft-color);\n        }\n      }\n    `}\n\n      ${state === 'disabled' &&\n    css`\n      [data-ui='Avatar'] {\n        opacity: 0.2;\n      }\n    `}\n\n    // line styling 👇\n      &:first-child ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &:last-child ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${(isHovered || state === 'selected') &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n\n    // Remove timeline lines when using the keyboard to navigate timeline items\n    &:focus ${IconWrapper}::before {\n      background: transparent;\n    }\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const EventLabel = styled(Text)`\n  text-transform: capitalize;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n","import React, {useCallback, createElement, useMemo, useState} from 'react'\nimport {Box, ButtonTone, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {formatTimelineEventLabel, getTimelineEventIconComponent} from './helpers'\nimport {TimelineItemState} from './types'\nimport {UserAvatarStack} from './userAvatarStack'\n\nimport {EventLabel, IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {ChunkType, Chunk, useTimeAgo} from 'sanity'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonTone> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\nexport function TimelineItem(props: {\n  isSelectionBottom: boolean\n  isSelectionTop: boolean\n  state: TimelineItemState\n  onSelect: (chunk: Chunk) => void\n  chunk: Chunk\n  timestamp: string\n  type: ChunkType\n}) {\n  const {isSelectionBottom, isSelectionTop, state, onSelect, timestamp, chunk, type} = props\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const timeAgo = useTimeAgo(timestamp, {minimal: true})\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n\n    return formattedDate\n  }, [timestamp])\n\n  const isSelected = state === 'selected'\n  const isWithinSelection = state === 'withinSelection'\n\n  const [isHovered, setHovered] = useState(false)\n\n  const handleClick = useCallback(\n    (evt: React.MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n      onSelect(chunk)\n    },\n    [onSelect, chunk]\n  )\n\n  // @todo: ensure that tooltips are correctly displayed when navigating the parent <Menu> component with the keyboard.\n  return (\n    <Root\n      data-ui=\"timelineItem\"\n      radius={2}\n      data-chunk-id={chunk.id}\n      padding={0}\n      tone={\n        isHovered || isSelected || isWithinSelection ? 'default' : TIMELINE_ITEM_EVENT_TONE[type]\n      }\n      pressed={isWithinSelection}\n      state={state}\n      selected={isSelected}\n      isHovered={isHovered}\n      disabled={state === 'disabled'}\n      data-selection-bottom={isSelectionBottom}\n      data-selection-top={isSelectionTop}\n      onClick={handleClick}\n    >\n      <Tooltip\n        portal\n        placement=\"left\"\n        fallbackPlacements={['bottom']}\n        content={\n          <Stack padding={3} space={3}>\n            <Text size={1}>{formattedTimestamp}</Text>\n          </Stack>\n        }\n      >\n        <Box\n          // eslint-disable-next-line react/jsx-no-bind\n          onMouseEnter={() => setHovered(true)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onMouseLeave={() => setHovered(false)}\n          paddingX={2}\n        >\n          <Flex align=\"stretch\">\n            <IconWrapper align=\"center\">\n              <IconBox padding={2}>\n                <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n              </IconBox>\n            </IconWrapper>\n\n            <Stack space={2} margin={2}>\n              <Box>\n                <EventLabel size={1} weight=\"medium\">\n                  {formatTimelineEventLabel(type) || <code>{type}</code>}\n                </EventLabel>\n              </Box>\n              <TimestampBox paddingX={1}>\n                <Text size={0} muted>\n                  {timeAgo}\n                </Text>\n              </TimestampBox>\n            </Stack>\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n            </Flex>\n          </Flex>\n        </Box>\n      </Tooltip>\n    </Root>\n  )\n}\n","import {Box, Menu, Stack} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Box)`\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n`\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const MenuWrapper = styled(Menu)`\n  overflow: auto;\n  box-sizing: border-box;\n  max-height: calc(100vh - 198px);\n`\n","import React, {useCallback, useEffect, useRef, useState} from 'react'\nimport {Text, Spinner, Flex} from '@sanity/ui'\nimport {TimelineItem} from './timelineItem'\nimport {TimelineItemState} from './types'\nimport {Root, StackWrapper, MenuWrapper} from './timeline.styled'\nimport {Chunk, Timeline as TimelineModel} from 'sanity'\n\ninterface TimelineProps {\n  timeline: TimelineModel\n  onSelect: (chunk: Chunk) => void\n  onLoadMore: (state: boolean) => void\n\n  /** Are the chunks above the topSelection enabled? */\n  disabledBeforeSelection?: boolean\n  /** The first chunk of the selection. */\n  topSelection: Chunk\n  /** The final chunk of the selection. */\n  bottomSelection: Chunk\n}\n\n// Must be a positive number\nconst LOAD_MORE_OFFSET = 20\n\nexport const Timeline = ({\n  timeline,\n  disabledBeforeSelection,\n  topSelection,\n  bottomSelection,\n  onSelect,\n  onLoadMore,\n}: TimelineProps) => {\n  const rootRef = useRef<HTMLDivElement | null>(null)\n  const listRef = useRef<HTMLDivElement | null>(null)\n  const [loadingElement, setLoadingElement] = useState<HTMLDivElement | null>(null)\n\n  let state: TimelineItemState = disabledBeforeSelection ? 'disabled' : 'enabled'\n\n  const checkIfLoadIsNeeded = useCallback(() => {\n    const rootEl = rootRef.current\n\n    if (loadingElement && rootEl) {\n      const {offsetHeight, scrollTop} = rootEl\n      const bottomPosition = offsetHeight + scrollTop + LOAD_MORE_OFFSET\n      const isVisible = loadingElement.offsetTop < bottomPosition\n\n      if (isVisible) {\n        // @todo: find out why, for some reason, it won't load without RAF wrapper\n        requestAnimationFrame(() => onLoadMore(isVisible))\n      }\n    }\n  }, [onLoadMore, loadingElement])\n\n  // Load whenever it's needed\n  useEffect(checkIfLoadIsNeeded, [checkIfLoadIsNeeded])\n\n  return (\n    <Root ref={rootRef as any} onScroll={checkIfLoadIsNeeded} data-ui=\"timeline\">\n      {timeline.chunkCount === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            No document history\n          </Text>\n          <Text muted size={1}>\n            When changing the content of the document, the document versions will appear in this\n            menu.\n          </Text>\n        </StackWrapper>\n      )}\n\n      {timeline.chunkCount > 0 && (\n        <MenuWrapper ref={listRef} padding={1} space={0}>\n          {timeline.mapChunks((chunk) => {\n            const isSelectionTop = topSelection === chunk\n            const isSelectionBottom = bottomSelection === chunk\n\n            if (isSelectionTop) {\n              state = 'withinSelection'\n            }\n\n            if (isSelectionBottom) {\n              state = 'selected'\n            }\n\n            const item = (\n              <TimelineItem\n                chunk={chunk}\n                isSelectionBottom={isSelectionBottom}\n                isSelectionTop={isSelectionTop}\n                key={chunk.id}\n                state={state}\n                onSelect={onSelect}\n                type={chunk.type}\n                timestamp={chunk.endTimestamp}\n              />\n            )\n\n            // Flip it back to normal after we've rendered the active one.\n            if (state === 'selected') {\n              state = 'enabled'\n            }\n\n            return item\n          })}\n        </MenuWrapper>\n      )}\n\n      {!timeline.reachedEarliestEntry && (\n        <Flex align=\"center\" justify=\"center\" padding={4} ref={setLoadingElement}>\n          <Spinner muted />\n        </Flex>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {SelectIcon} from '@sanity/icons'\nimport {useClickOutside, Button, Popover, Placement, useGlobalKeyDown} from '@sanity/ui'\nimport {upperFirst} from 'lodash'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {sinceTimelineProps, revTimelineProps, formatTimelineEventLabel} from './helpers'\nimport {Timeline} from './timeline'\nimport {Chunk, useTimeAgo} from 'sanity'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    & > [data-ui='Card'] {\n      flex: 1;\n      min-height: 0;\n      display: flex;\n      flex-direction: column;\n\n      /* This is the scrollable container rendered by <Timeline /> */\n      & > div {\n        flex: 1;\n        min-height: 0;\n      }\n    }\n  }\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {historyController, setTimelineRange, setTimelineMode, timeline, ready} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [menuContent, setMenuContent] = useState<HTMLDivElement | null>(null)\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    handleClose()\n  }, [handleClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open]\n  )\n\n  useClickOutside(handleClickOutside, [menuContent, button])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      const [sinceId, revId] = historyController.findRangeForNewRev(revChunk)\n      setTimelineMode('closed')\n      setOpen(false)\n      setTimelineRange(sinceId, revId)\n    },\n    [historyController, setTimelineMode, setTimelineRange]\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      const [sinceId, revId] = historyController.findRangeForNewSince(sinceChunk)\n      setTimelineMode('closed')\n      setOpen(false)\n      setTimelineRange(sinceId, revId)\n    },\n    [historyController, setTimelineMode, setTimelineRange]\n  )\n\n  const loadMoreHistory = useCallback(\n    (state: boolean) => {\n      historyController.setLoadMore(state)\n    },\n    [historyController]\n  )\n\n  const content = open && (\n    <div ref={setMenuContent}>\n      {mode === 'rev' ? (\n        <Timeline\n          onSelect={selectRev}\n          onLoadMore={loadMoreHistory}\n          timeline={timeline}\n          {...revTimelineProps(historyController.realRevChunk)}\n        />\n      ) : (\n        <Timeline\n          onSelect={selectSince}\n          onLoadMore={loadMoreHistory}\n          timeline={timeline}\n          {...sinceTimelineProps(historyController.sinceTime!, historyController.realRevChunk)}\n        />\n      )}\n    </div>\n  )\n\n  const timeAgo = useTimeAgo(chunk?.endTimestamp || '', {agoSuffix: true})\n\n  const revLabel = chunk\n    ? `${upperFirst(formatTimelineEventLabel(chunk.type))} ${timeAgo}`\n    : 'Current version'\n\n  const sinceLabel = chunk\n    ? `Since ${formatTimelineEventLabel(chunk.type)} ${timeAgo}`\n    : 'Since unknown version'\n\n  const openLabel = mode === 'rev' ? 'Select version' : 'Review changes since'\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        fontSize={1}\n        padding={2}\n        iconRight={SelectIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        text={open ? openLabel : buttonLabel}\n      />\n    </Root>\n  )\n}\n","import React from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\n\nexport function LoadingContent() {\n  return (\n    <Flex align=\"center\" justify=\"center\">\n      <Spinner muted />\n      <Box marginTop={3}>\n        <Text align=\"center\">Loading changes…</Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {AnnotationDetails, visitDiff, Diff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n","import {ObjectDiff} from '@sanity/diff'\nimport {CloseIcon} from '@sanity/icons'\nimport {AvatarStack, BoundaryElementProvider, Box, Button, Flex} from '@sanity/ui'\nimport React, {useRef} from 'react'\nimport styled from 'styled-components'\nimport {PaneContent, PaneHeader, usePane} from '../../../components'\nimport {TimelineMenu} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {LoadingContent} from './content/LoadingContent'\nimport {collectLatestAuthorAnnotations} from './helpers'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  DocumentChangeContext,\n  DocumentChangeContextInstance,\n  NoChanges,\n  ScrollContainer,\n  UserAvatar,\n} from 'sanity'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesPanel(): React.ReactElement | null {\n  const {documentId, onHistoryClose, historyController, schemaType, value} = useDocumentPane()\n  const {collapsed} = usePane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n  const historyState = historyController.selectionState\n  const loading = historyState === 'loading'\n  const since = historyController.sinceTime\n  const diff: ObjectDiff<any> | null = historyController.currentObjectDiff()\n  const isComparingCurrent = !historyController.onOlderRevision()\n\n  const documentContext: DocumentChangeContextInstance = React.useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value]\n  )\n\n  const changeAnnotations = React.useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff]\n  )\n\n  if (collapsed) {\n    return null\n  }\n\n  return (\n    <Flex\n      direction=\"column\"\n      flex={1}\n      style={{\n        borderLeft: '1px dashed var(--card-border-color)',\n        overflow: 'hidden',\n        minWidth: 320,\n      }}\n      data-testid=\"review-changes-pane\"\n    >\n      <PaneHeader\n        actions={\n          <Button\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onHistoryClose}\n            padding={3}\n            title=\"Hide changes panel\"\n          />\n        }\n        subActions={\n          changeAnnotations.length > 0 && (\n            <Box paddingRight={1}>\n              <DiffTooltip\n                annotations={changeAnnotations}\n                description=\"Changes by\"\n                placement=\"bottom-end\"\n              >\n                <AvatarStack maxLength={4}>\n                  {changeAnnotations.map(({author}) => (\n                    <UserAvatar key={author} user={author} />\n                  ))}\n                </AvatarStack>\n              </DiffTooltip>\n            </Box>\n          )\n        }\n        tabs={<TimelineMenu mode=\"since\" chunk={since} placement=\"bottom-start\" />}\n        title=\"Changes\"\n      />\n\n      <PaneContent>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content diff={diff} documentContext={documentContext} loading={loading} />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </PaneContent>\n    </Flex>\n  )\n}\n\nfunction Content({\n  diff,\n  documentContext,\n  loading,\n}: {\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n}) {\n  const {schemaType} = useDocumentPane()\n\n  if (loading) {\n    return <LoadingContent />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useSettingsStore} from 'sanity'\n\n/**\n * @internal\n */\nexport function useDeskToolSetting<ValueType>(\n  namespace: string | null,\n  key: string,\n  defaultValue?: ValueType\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const settingsStore = useSettingsStore()\n  const [value, setValue] = useState<ValueType | undefined>(defaultValue)\n\n  const deskToolSettings = useMemo(() => settingsStore.forNamespace('desk-tool'), [settingsStore])\n\n  const settings = useMemo(() => {\n    if (namespace) {\n      return deskToolSettings.forNamespace(namespace).forKey(key)\n    }\n\n    return deskToolSettings.forKey(key)\n  }, [deskToolSettings, namespace, key])\n\n  useEffect(() => {\n    const sub = settings.listen(defaultValue).subscribe({\n      next: setValue as any,\n    })\n\n    return () => sub?.unsubscribe()\n  }, [defaultValue, key, namespace, settings])\n\n  const set = useCallback(\n    (newValue: ValueType) => {\n      setValue(newValue)\n      settings.set(newValue as any)\n    },\n    [settings]\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'Parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'Raw JSON'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {SanityDocumentLike} from '@sanity/types'\nimport HLRU from 'hashlru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = HLRU(1000)\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport React, {useCallback} from 'react'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange]\n  )\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder=\"Search\"\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {SanityDocument} from '@sanity/types'\nimport {Card, Code, Dialog, Flex, Tab, TabList, TabPanel} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport JSONInspector from '@rexxars/react-json-inspector'\nimport {DocTitle} from '../../../components'\nimport {useDeskToolSetting} from '../../../useDeskToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useDeskToolSetting(\n    'desk-tool',\n    `inspect-view-preferred-view-mode-${paneKey}`,\n    'parsed'\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  return (\n    <Dialog\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <>\n            Inspecting{' '}\n            <em>\n              <DocTitle document={value} />\n            </em>\n          </>\n        ) : (\n          <em>No value</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      width={3}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card padding={3} shadow={1} style={{position: 'sticky', bottom: 0, zIndex: 3}}>\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={VIEW_MODE_PARSED.title}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              fontSize={1}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={VIEW_MODE_RAW.title}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JSONInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, Button, Card, Container, Flex, Text} from '@sanity/ui'\nimport {WarningOutlineIcon, SyncIcon, CloseIcon} from '@sanity/icons'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {KeyedSegment, Reference} from '@sanity/types'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {concat, Observable, of} from 'rxjs'\nimport {useMemoObservable} from 'react-rx'\nimport {RouterPaneGroup} from '../../../types'\nimport {usePaneRouter} from '../../../components'\nimport {DocumentAvailability, useDocumentPreviewStore, getPublishedId} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\nconst TextOneLine = styled(Text)`\n  & > * {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n`\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {draft: DocumentAvailability; published: DocumentAvailability}\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfo = useMemoObservable(\n    (): Observable<ParentReferenceInfo> => {\n      const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n      // short-circuit: this document pane is not a child reference pane\n      if (!parentId || !parentRefPathSegment || !parentRefPath) {\n        return of({loading: false})\n      }\n\n      const publishedId = getPublishedId(parentId)\n      const path = pathFromString(parentRefPathSegment)\n\n      // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n      const keyedSegmentIndex = path.findIndex(\n        (p): p is KeyedSegment => typeof p == 'object' && '_key' in p\n      )\n\n      return concat(\n        // emit a loading state instantly\n        of({loading: true}),\n        // then emit the values from watching the published ID's path\n        documentPreviewStore\n          .unstable_observePathsDocumentPair(\n            publishedId,\n            (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][]\n          )\n          .pipe(\n            // this debounce time is needed to prevent flashing banners due to\n            // the router state updating faster than the content-lake state. we\n            // debounce to wait for more emissions because the value pulled\n            // initially could be stale.\n            debounceTime(750),\n            map(\n              ({draft, published}): ParentReferenceInfo => ({\n                loading: false,\n                result: {\n                  availability: {\n                    draft: draft.availability,\n                    published: published.availability,\n                  },\n                  refValue: pathGet<Reference>(draft.snapshot || published.snapshot, parentRefPath)\n                    ?._ref,\n                },\n              })\n            )\n          )\n      )\n    },\n    [parentId, parentRefPath],\n    {loading: true}\n  )\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Root shadow={1} tone=\"caution\" data-testid=\"reference-changed-banner\">\n      <Container paddingX={4} paddingY={2} sizing=\"border\" width={1}>\n        <Flex align=\"center\">\n          <Text size={1}>\n            <WarningOutlineIcon />\n          </Text>\n\n          {referenceInfo.result?.refValue ? (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has changed since you opened it.\" size={1}>\n                  This reference has changed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  onClick={handleReloadReference}\n                  icon={SyncIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Reload reference\"\n                />\n              </Box>\n            </>\n          ) : (\n            <>\n              <Box flex={1} marginLeft={3}>\n                <TextOneLine title=\"This reference has been removed since you opened it.\" size={1}>\n                  This reference has been removed since you opened it.\n                </TextOneLine>\n              </Box>\n              <Box marginLeft={3}>\n                <Button\n                  as={BackLink}\n                  icon={CloseIcon}\n                  fontSize={1}\n                  mode=\"ghost\"\n                  padding={2}\n                  space={2}\n                  text=\"Close reference\"\n                />\n              </Box>\n            </>\n          )}\n        </Flex>\n      </Container>\n    </Root>\n  )\n})\n\nReferenceChangedBanner.displayName = 'ReferenceChangedBanner'\n","import React from 'react'\nimport {Box, Card, Container, Flex, Text} from '@sanity/ui'\nimport {ReadOnlyIcon} from '@sanity/icons'\nimport styled from 'styled-components'\nimport {useCurrentUser} from 'sanity'\n\nconst Root = styled(Card)`\n  position: relative;\n  z-index: 50;\n`\n\ninterface PermissionCheckBannerProps {\n  granted: boolean\n  requiredPermission: string\n}\n\nexport function PermissionCheckBanner({granted, requiredPermission}: PermissionCheckBannerProps) {\n  const currentUser = useCurrentUser()\n  const plural = currentUser?.roles?.length !== 1\n\n  const roles = join(\n    currentUser?.roles?.map((r) => <code key={r.name}>{r.title}</code>) || [],\n    ', '\n  )\n\n  if (granted) return null\n\n  return (\n    <Root data-testid=\"permission-check-banner\" shadow={1} tone=\"transparent\">\n      <Container paddingX={4} paddingY={3} sizing=\"border\" width={1}>\n        <Flex align=\"flex-start\">\n          <Text size={1}>\n            <ReadOnlyIcon />\n          </Text>\n\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              Your role{plural && 's'} {roles} {plural ? 'do' : 'does'} not have permissions to{' '}\n              {requiredPermission} this document.\n            </Text>\n          </Box>\n        </Flex>\n      </Container>\n    </Root>\n  )\n}\n\nfunction join<T, S>(array: Array<T>, sep: S): Array<T | S> | null {\n  return array.reduce((result: Array<T | S> | null, item: T | S) => {\n    if (result === null) {\n      return [item]\n    }\n\n    return result.concat([sep, item])\n  }, null)\n}\n","import {useEffect, useRef} from 'react'\nimport {ToastParams, useToast} from '@sanity/ui'\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n  return ref.current\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  const wasEnabled = usePrevious(params.enabled)\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (!wasEnabled && params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    if (wasEnabled && !params.enabled) {\n      toast.push({\n        ...params,\n        // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n        duration: 0.01,\n      })\n    }\n  }, [params, toast, wasEnabled])\n}\n","/* eslint-disable no-nested-ternary */\n\nimport {Box, Container, Flex, Spinner, Text, focusFirstDescendant} from '@sanity/ui'\nimport React, {useEffect, useMemo, useRef} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Delay} from '../../../../components/Delay'\nimport {useConditionalToast} from './useConditionalToast'\nimport {\n  DocumentMutationEvent,\n  DocumentRebaseEvent,\n  FormBuilder,\n  PatchMsg,\n  PresenceOverlay,\n  createPatchChannel,\n  fromMutationPatches,\n  useDocumentPresence,\n  useDocumentStore,\n} from 'sanity'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: React.FormEvent) => ev.preventDefault()\n\nexport function FormView(props: FormViewProps) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n  } = useDocumentPane()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const patchChannel = useMemo(() => createPatchChannel(), [])\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n\n  useConditionalToast({\n    id: `sync-lock-${documentId}`,\n    status: 'warning',\n    enabled: isLocked,\n    title: `Syncing document…`,\n    description: `Please hold tight while the document is synced. This usually happens right after the document has been published, and it shouldn't take more than a few seconds`,\n  })\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        })\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel])\n\n  const hasRev = Boolean(value?._rev)\n  useEffect(() => {\n    if (hasRev) {\n      // this is a workaround for an issue that caused the document pushed to withDocument to get\n      // stuck at the first initial value.\n      // This effect is triggered only when the document goes from not having a revision, to getting one\n      // so it will kick in as soon as the document is received from the backend\n      patchChannel.publish({\n        type: 'mutation',\n        patches: [],\n        snapshot: value,\n      })\n    }\n    // React to changes in hasRev only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasRev])\n\n  const formRef = useRef<null | HTMLDivElement>(null)\n\n  useEffect(() => {\n    focusFirstDescendant(formRef.current!)\n  }, [])\n\n  // const after = useMemo(\n  //   () =>\n  //     Array.isArray(afterEditorComponents) &&\n  //     afterEditorComponents.map(\n  //       (AfterEditorComponent: React.ComponentType<{documentId: string}>, idx: number) => (\n  //         <AfterEditorComponent key={String(idx)} documentId={documentId} />\n  //       )\n  //     ),\n  //   [documentId]\n  // )\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box as=\"form\" onSubmit={preventDefault} ref={formRef}>\n          {ready ? (\n            formState === null ? (\n              <Box padding={2}>\n                <Text>This form is hidden</Text>\n              </Box>\n            ) : (\n              <FormBuilder\n                __internal_patchChannel={patchChannel}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focusPath={formState.focusPath}\n                changed={formState.changed}\n                focused={formState.focused}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                presence={presence}\n                readOnly={formState.readOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={formState.value}\n              />\n            )\n          ) : (\n            <Delay ms={300}>\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    Loading document\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n}\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches)\n    ),\n  }\n}\n","import React, {useCallback} from 'react'\nimport {Tab, TabList} from '@sanity/ui'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {usePaneRouter} from '../../../../components'\n\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          key={view.id}\n          label={<>{view.title}</>}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : view.id ?? null}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: React.ComponentType | React.ReactNode\n  id: string\n  isActive: boolean\n  label: React.ReactNode\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId} = props\n  const {ready} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      aria-controls={tabPanelId}\n      disabled={!ready}\n      fontSize={1}\n      icon={icon}\n      id={id}\n      selected={isActive}\n      label={label as any}\n      onClick={handleClick}\n    />\n  )\n}\n","import {ErrorOutlineIcon, InfoOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {\n  isValidationInfoMarker,\n  isValidationWarningMarker,\n  isValidationErrorMarker,\n  Path,\n} from '@sanity/types'\nimport {Button, ButtonProps, Menu, MenuButton} from '@sanity/ui'\nimport React, {useCallback, useMemo, useId} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationList} from 'sanity'\n\nexport interface ValidationMenuProps {\n  boundaryElement: HTMLDivElement | null\n  isOpen: boolean\n  setOpen: (val: boolean) => void\n}\n\nconst BUTTON_PROPS: Record<'error' | 'warning' | 'info', ButtonProps> = {\n  error: {\n    tone: 'critical',\n    icon: ErrorOutlineIcon,\n  },\n  warning: {\n    tone: 'caution',\n    icon: WarningOutlineIcon,\n  },\n  info: {\n    tone: 'primary',\n    icon: InfoOutlineIcon,\n  },\n}\n\nexport function ValidationMenu(props: ValidationMenuProps) {\n  const {boundaryElement, isOpen, setOpen} = props\n  const {onFocus, onPathOpen, schemaType, validation} = useDocumentPane()\n  const id = useId()\n  const hasValidationMarkers = validation.length > 0\n  const hasErrorMarkers = validation.some(isValidationErrorMarker)\n  const hasWarningMarkers = validation.some(isValidationWarningMarker)\n  const hasInfoMarkers = validation.some(isValidationInfoMarker)\n\n  const buttonProps = useMemo(() => {\n    if (hasErrorMarkers) return BUTTON_PROPS.error\n    if (hasWarningMarkers) return BUTTON_PROPS.warning\n    if (hasInfoMarkers) return BUTTON_PROPS.info\n    return undefined\n  }, [hasErrorMarkers, hasInfoMarkers, hasWarningMarkers])\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen]\n  )\n\n  const handleClose = useCallback(() => setOpen(false), [setOpen])\n\n  if (!hasValidationMarkers) return null\n\n  return (\n    <MenuButton\n      id={id || ''}\n      button={\n        <Button\n          {...buttonProps}\n          title=\"Show validation issues\"\n          mode=\"bleed\"\n          data-testid=\"validation-list-button\"\n        />\n      }\n      menu={\n        <Menu open={isOpen}>\n          <ValidationList\n            documentType={schemaType}\n            validation={validation}\n            onClose={handleClose}\n            onFocus={handleOpen}\n          />\n        </Menu>\n      }\n      popover={{\n        portal: true,\n        boundaryElement: boundaryElement,\n        constrainSize: true,\n        preventOverflow: true,\n        width: 0,\n      }}\n      placement=\"bottom\"\n    />\n  )\n}\n","import React, {ReactElement} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport function DocumentHeaderTitle(): ReactElement {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue) && connectionState === 'connected'\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState !== 'connected') {\n    return <></>\n  }\n\n  if (!documentValue) {\n    return <>New {schemaType?.title || schemaType?.name}</>\n  }\n\n  if (subscribed) {\n    if (error) {\n      return <>Error: {error.message}</>\n    }\n\n    return (\n      <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n    )\n  }\n\n  return <>{title}</>\n}\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Button, Inline} from '@sanity/ui'\nimport {negate} from 'lodash'\nimport React, {createElement, memo, forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../../../../types'\nimport {PaneHeader, PaneContextMenuButton, usePaneRouter} from '../../../../components'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDeskTool} from '../../../../useDeskTool'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {ValidationMenu} from './ValidationMenu'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\n\nexport interface DocumentPanelHeaderProps {\n  // TODO:\n  // eslint-disable-next-line react/no-unused-prop-types\n  rootElement: HTMLDivElement | null\n}\n\nconst isActionButton = (item: PaneMenuItem) => Boolean(item.showAsAction)\nconst isMenuButton = negate(isActionButton)\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(({rootElement}: DocumentPanelHeaderProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {\n      onMenuAction,\n      onPaneClose,\n      onPaneSplit,\n      historyController,\n      validation,\n      menuItems,\n      menuItemGroups,\n      schemaType,\n      ready,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {revTime: rev} = historyController\n    const {features} = useDeskTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const contextMenuItems = useMemo(() => menuItems.filter(isMenuButton), [menuItems])\n    const [isValidationOpen, setValidationOpen] = React.useState<boolean>(false)\n    const showTabs = views.length > 1\n    const showVersionMenu = features.reviewChanges\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button) do the same thing and shouldn't be shown at the same time)\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !features.backButton\n\n    return (\n      <PaneHeader\n        ref={ref}\n        loading={!ready}\n        title={<DocumentHeaderTitle />}\n        tabs={showTabs && <DocumentHeaderTabs />}\n        backButton={\n          features.backButton &&\n          index > 0 && <Button as={BackLink} data-as=\"a\" icon={ArrowLeftIcon} mode=\"bleed\" />\n        }\n        subActions={\n          showVersionMenu && <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        }\n        actions={\n          <Inline space={1}>\n            {unstable_languageFilter.length > 0 && (\n              <>\n                {unstable_languageFilter.map((languageFilterComponent, idx) => {\n                  return createElement(languageFilterComponent, {\n                    // eslint-disable-next-line react/no-array-index-key\n                    key: `language-filter-${idx}`,\n                    schemaType,\n                  })\n                })}\n              </>\n            )}\n\n            {validation.length > 0 && (\n              <ValidationMenu\n                boundaryElement={rootElement}\n                isOpen={isValidationOpen}\n                key=\"validation-menu\"\n                setOpen={setValidationOpen}\n              />\n            )}\n\n            <PaneContextMenuButton\n              itemGroups={menuItemGroups}\n              items={contextMenuItems}\n              key=\"context-menu\"\n              onAction={onMenuAction}\n            />\n\n            {showSplitPaneButton && (\n              <Button\n                icon={SplitVerticalIcon}\n                key=\"split-pane-button\"\n                mode=\"bleed\"\n                onClick={onPaneSplit}\n                title=\"Split pane right\"\n              />\n            )}\n\n            {showSplitPaneCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                onClick={onPaneClose}\n                title=\"Close split pane\"\n              />\n            )}\n\n            {showPaneGroupCloseButton && (\n              <Button\n                icon={CloseIcon}\n                key=\"close-view-button\"\n                mode=\"bleed\"\n                title=\"Close pane group\"\n                as={BackLink}\n              />\n            )}\n          </Inline>\n        }\n      />\n    )\n  })\n)\n\nDocumentPanelHeader.displayName = 'DocumentPanelHeader'\n","import {BoundaryElementProvider, Flex, PortalProvider, usePortal, useElementRect} from '@sanity/ui'\nimport React, {createElement, useEffect, useMemo, useRef, useState} from 'react'\nimport styled, {css} from 'styled-components'\nimport {PaneContent, usePaneLayout} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDeskTool} from '../../../useDeskTool'\nimport {ReferenceChangedBanner} from './ReferenceChangedBanner'\nimport {PermissionCheckBanner} from './PermissionCheckBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelHeader} from './header'\nimport {ScrollContainer} from 'sanity'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  rootElement: HTMLDivElement | null\n  isInspectOpen: boolean\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n}\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {footerHeight, isInspectOpen, rootElement, setDocumentPanelPortalElement} = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const parentPortal = usePortal()\n  const {features} = useDeskTool()\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n  const headerRect = useElementRect(headerElement)\n  const portalRef = useRef<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views]\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? portalRef.current || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerRect?.height || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerRect])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(\n    () =>\n      activeView.type === 'component' &&\n      activeView.component &&\n      createElement(activeView.component, {\n        document: {\n          draft: editState?.draft || null,\n          displayed: displayed || value,\n          historical: displayed,\n          published: editState?.published || null,\n        },\n        documentId,\n        options: activeView.options,\n        schemaType,\n      }),\n    [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value]\n  )\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  return (\n    <Flex direction=\"column\" flex={2} overflow={layoutCollapsed ? undefined : 'hidden'}>\n      <DocumentPanelHeader rootElement={rootElement} ref={setHeaderElement} />\n\n      <PaneContent>\n        <PortalProvider\n          element={portalElement}\n          __unstable_elements={{documentScrollElement: documentScrollElement}}\n        >\n          <BoundaryElementProvider element={documentScrollElement}>\n            {activeView.type === 'form' && !isPermissionsLoading && ready && (\n              <>\n                <PermissionCheckBanner\n                  granted={Boolean(permissions?.granted)}\n                  requiredPermission={requiredPermission}\n                />\n                <ReferenceChangedBanner />\n              </>\n            )}\n\n            <Scroller\n              $disabled={layoutCollapsed || false}\n              data-testid=\"document-panel-scroller\"\n              ref={setDocumentScrollElement}\n            >\n              <FormView\n                hidden={formViewHidden}\n                key={documentId + (ready ? '_ready' : '_pending')}\n                margins={margins}\n              />\n              {activeViewNode}\n            </Scroller>\n\n            {inspectDialog}\n\n            <div data-testid=\"document-panel-portal\" ref={portalRef} />\n          </BoundaryElementProvider>\n        </PortalProvider>\n      </PaneContent>\n    </Flex>\n  )\n}\n","import {DialogProps, Placement} from '@sanity/ui'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button,\n  Flex,\n  Grid,\n  Popover,\n  Text,\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionConfirmDialogProps} from 'sanity'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onCancel()\n  }, [isTopLayer, onCancel])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel]\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return (\n    <Flex direction=\"column\" ref={setElement} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || 'Cancel'}\n          />\n          <Button\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || 'Confirm'}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {Box, Dialog} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\nimport {DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n        // Custom portal element configured in `DocumentPane` so that the dialog is scoped to the current pane\n        portal=\"documentPanelPortalElement\"\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {Popover, useClickOutside, useGlobalKeyDown, useLayer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\nimport {DocumentActionPopoverDialogProps} from 'sanity'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const [element, setElement] = useState<HTMLElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    if (isTopLayer) onClose()\n  }, [isTopLayer, onClose])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose]\n  )\n\n  useClickOutside(handleClickOutside, [element])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  return <div ref={setElement}>{content}</div>\n}\n","import {Box, Dialog} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\nimport {DocumentActionDialogProps} from 'sanity'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return <ModalDialog dialog={dialog} />\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={2}\n    >\n      <Box padding={4}>\n        {unknownModal.content || (\n          <>\n            Unexpected modal type (<code>{unknownModal.type}</code>)\n          </>\n        )}\n      </Box>\n    </Dialog>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  PopoverProps,\n  Text,\n  Tooltip,\n} from '@sanity/ui'\nimport React, {\n  createElement,\n  isValidElement,\n  useCallback,\n  useRef,\n  useState,\n  useMemo,\n  useId,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription, LegacyLayerProvider} from 'sanity'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const [actionIndex, setActionIndex] = useState(-1)\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    []\n  )\n\n  const currentAction = actionStates[actionIndex]\n\n  return (\n    <>\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <Button\n            data-testid=\"action-menu-button\"\n            aria-label=\"Open document actions\"\n            disabled={disabled}\n            icon={ChevronDownIcon}\n            mode=\"ghost\"\n            ref={buttonRef}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n    </>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nfunction ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const tooltipContent = actionState.title && (\n    <Box padding={2}>\n      <Text size={1}>{actionState.title}</Text>\n    </Box>\n  )\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      onClick={handleClick}\n      padding={0}\n      tone={actionState.tone}\n    >\n      <Tooltip\n        content={tooltipContent}\n        disabled={!tooltipContent}\n        fallbackPlacements={['left', 'bottom']}\n        placement=\"top\"\n        portal\n      >\n        <Flex align=\"center\" paddingX={3}>\n          <Flex flex={1} paddingY={3}>\n            {actionState.icon && (\n              <Box marginRight={3}>\n                <Text>\n                  {isValidElement(actionState.icon) && actionState.icon}\n                  {isValidElementType(actionState.icon) && createElement(actionState.icon)}\n                </Text>\n              </Box>\n            )}\n\n            <Text>{actionState.label}</Text>\n          </Flex>\n\n          {actionState.shortcut && (\n            <Box marginLeft={3}>\n              <Hotkeys\n                keys={String(actionState.shortcut)\n                  .split('+')\n                  .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))}\n              />\n            </Box>\n          )}\n        </Flex>\n      </Tooltip>\n    </MenuItem>\n  )\n}\n","import {Box, Flex, Tooltip, Stack, Button, Hotkeys, LayerProvider, Text} from '@sanity/ui'\nimport React, {memo, useMemo, useState} from 'react'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\nimport {DocumentActionDescription} from 'sanity'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nfunction DocumentStatusBarActionsInner(props: DocumentStatusBarActionsInnerProps) {\n  const {disabled, showMenu, states} = props\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex padding={2} style={{maxWidth: 300}} align=\"center\">\n        <Text size={1}>{firstActionState.title}</Text>\n        {firstActionState.shortcut && (\n          <Box marginLeft={firstActionState.title ? 2 : 0}>\n            <Hotkeys\n              keys={String(firstActionState.shortcut)\n                .split('+')\n                .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n            />\n          </Box>\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  return (\n    <Flex>\n      {firstActionState && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} portal placement=\"top\">\n            <Stack flex={1}>\n              <Button\n                data-testid={`action-${firstActionState.label}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n\n      {showMenu && menuActionStates.length > 0 && (\n        <Box marginLeft={1}>\n          <ActionMenuButton actionStates={menuActionStates} disabled={disabled} />\n        </Box>\n      )}\n\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n}\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {actions, connectionState, documentId, editState} = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  if (!actions || !editState) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      // @ts-expect-error TODO: fix the document actions\n      actionProps={editState}\n    >\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected'}\n          // isMenuOpen={isMenuOpen}\n          // onMenuOpen={handleMenuOpen}\n          // onMenuClose={handleMenuClose}\n          showMenu={actions.length > 1}\n          states={states}\n          // Use document ID as key to make sure that the actions state is reset when the document changes\n          key={documentId}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {connectionState, editState, historyController} = useDocumentPane()\n  const revision = historyController.revTime?.id || ''\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps = useMemo(() => ({...(editState || {}), revision}), [editState, revision])\n  const historyActions = useMemo(() => [HistoryRestoreAction], [])\n\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps as any}>\n      {({states}) => (\n        <DocumentStatusBarActionsInner\n          disabled={connectionState !== 'connected' || Boolean(disabled)}\n          showMenu={false}\n          states={states}\n        />\n      )}\n    </RenderActionCollectionState>\n  )\n})\n","import {Badge, BadgeTone, Box, Inline, Text, Tooltip} from '@sanity/ui'\nimport React from 'react'\nimport {RenderBadgeCollectionState} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadgeDescription} from 'sanity'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nfunction DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={\n            badge.title && (\n              <Box padding={2}>\n                <Text size={1}>{badge.title}</Text>\n              </Box>\n            )\n          }\n          disabled={!badge.title}\n          key={String(index)}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n}\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState as any}>\n      {({states}) => <DocumentBadgesInner states={states} />}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {Box, Button, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {PlayIcon, PublishIcon} from '@sanity/icons'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {useTimeAgo} from 'sanity'\n\ninterface PublishStatusProps {\n  collapsed?: boolean\n  disabled: boolean\n  lastPublished?: string\n  lastUpdated?: string\n  liveEdit: boolean\n}\n\nconst Root = styled(Flex)`\n  cursor: default;\n`\n\nexport function PublishStatus(props: PublishStatusProps) {\n  const {collapsed, disabled, lastPublished, lastUpdated, liveEdit} = props\n\n  const lastPublishedTimeAgo = useTimeAgo(lastPublished || '', {minimal: true, agoSuffix: true})\n  const lastPublishedTime = useTimeAgo(lastPublished || '', {minimal: true})\n\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n\n  return (\n    <Root align=\"center\" data-ui=\"SessionLayout\" sizing=\"border\">\n      <Tooltip\n        placement=\"top\"\n        portal\n        content={\n          <Stack padding={3} space={3}>\n            <Text size={1} muted>\n              {liveEdit ? (\n                <>Last updated {lastUpdated ? lastUpdatedTimeAgo : lastPublishedTimeAgo}</>\n              ) : (\n                <>Last published {lastPublishedTimeAgo}</>\n              )}\n            </Text>\n          </Stack>\n        }\n      >\n        <Button\n          mode=\"bleed\"\n          tone={liveEdit ? 'critical' : 'positive'}\n          tabIndex={-1}\n          disabled={disabled}\n        >\n          <Flex align=\"center\">\n            <Box marginRight={collapsed ? 0 : 3}>\n              <Text size={2}>{liveEdit ? <PlayIcon /> : <PublishIcon />}</Text>\n            </Box>\n            {!collapsed && (\n              <Text size={1} weight=\"medium\">\n                {liveEdit ? (\n                  <>{lastUpdated ? lastUpdatedTime : lastPublishedTime}</>\n                ) : (\n                  lastPublishedTime\n                )}\n              </Text>\n            )}\n          </Flex>\n        </Button>\n      </Tooltip>\n    </Root>\n  )\n}\n","import React, {ComponentProps} from 'react'\nimport {motion} from 'framer-motion'\nimport styled, {keyframes} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\nconst Edit = (props: MotionPathProps) => (\n  <motion.path d=\"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\nconst edit = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  changes: {\n    pathLength: 1,\n    transition: {\n      duration: 0.4,\n      delay: 0.5,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n        <Edit variants={edit} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import React, {useMemo} from 'react'\nimport {Box, Button, ButtonProps, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\nimport {useTimeAgo} from 'sanity'\n\ninterface ReviewChangesButtonProps extends React.HTMLProps<HTMLButtonElement> {\n  status?: 'changes' | 'saved' | 'syncing'\n  lastUpdated?: string\n  collapsed?: boolean\n}\n\nconst ReviewButton = React.forwardRef(function ReviewButton(\n  props: ReviewChangesButtonProps & ButtonProps,\n  ref: React.ForwardedRef<HTMLButtonElement>\n) {\n  const {collapsed, status, lastUpdated, ...rest} = props\n  const lastUpdatedTime = useTimeAgo(lastUpdated || '', {minimal: true})\n  const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', {minimal: true, agoSuffix: true})\n\n  const buttonProps: ButtonProps = useMemo(() => {\n    if (status === 'syncing') {\n      return {\n        text: 'Saving...',\n        tone: undefined,\n      }\n    }\n    if (status === 'changes') {\n      return {\n        text: lastUpdatedTime,\n        tone: 'caution',\n      }\n    }\n    if (status === 'saved') {\n      return {\n        text: 'Saved!',\n        tone: 'positive',\n      }\n    }\n\n    return {}\n  }, [status, lastUpdatedTime])\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <Tooltip\n      placement=\"top\"\n      portal\n      disabled={status !== 'changes'}\n      content={\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            Review changes\n          </Text>\n          <Text size={1} muted>\n            Changes saved {lastUpdatedTimeAgo}\n          </Text>\n        </Stack>\n      }\n    >\n      <Button\n        mode=\"bleed\"\n        justify=\"flex-start\"\n        tone={buttonProps?.tone}\n        {...rest}\n        data-testid=\"review-changes-button\"\n        ref={ref}\n      >\n        <Flex align=\"center\">\n          <Box marginRight={collapsed ? 0 : 3}>\n            <Text>\n              <AnimatedStatusIcon status={status} />\n            </Text>\n          </Box>\n          {!collapsed && (\n            <Text size={1} weight=\"medium\">\n              {buttonProps?.text}\n            </Text>\n          )}\n        </Flex>\n      </Button>\n    </Tooltip>\n  )\n})\n\nexport const ReviewChangesButton = React.memo(ReviewButton)\n","import {Box, Flex, useElementRect} from '@sanity/ui'\nimport React, {useEffect, useMemo, useState, memo, useLayoutEffect} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentBadges} from './DocumentBadges'\nimport {PublishStatus} from './PublishStatus'\nimport {ReviewChangesButton} from './ReviewChangesButton'\nimport {useSyncState} from 'sanity'\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport const DocumentSparkline = memo(function DocumentSparkline() {\n  const {\n    changesOpen,\n    documentId,\n    documentType,\n    editState,\n    onHistoryClose,\n    onHistoryOpen,\n    historyController,\n    value,\n  } = useDocumentPane()\n  const syncState = useSyncState(documentId, documentType)\n\n  const lastUpdated = value?._updatedAt\n  const lastPublished = editState?.published?._updatedAt\n  const showingRevision = historyController.onOlderRevision()\n  const liveEdit = Boolean(editState?.liveEdit)\n  const published = Boolean(editState?.published)\n  const changed = Boolean(editState?.draft)\n\n  const [rootFlexElement, setRootFlexElement] = useState<HTMLDivElement | null>(null)\n  const rootFlexRect = useElementRect(rootFlexElement)\n  const collapsed = !rootFlexRect || rootFlexRect?.width < 300\n\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  const reviewButton = useMemo(\n    () => (\n      <ReviewChangesButton\n        lastUpdated={lastUpdated}\n        status={status || (changed ? 'changes' : undefined)}\n        onClick={changesOpen ? onHistoryClose : onHistoryOpen}\n        disabled={showingRevision}\n        selected={changesOpen}\n        collapsed={collapsed}\n      />\n    ),\n    [\n      changed,\n      changesOpen,\n      onHistoryClose,\n      onHistoryOpen,\n      lastUpdated,\n      showingRevision,\n      status,\n      collapsed,\n    ]\n  )\n\n  const publishStatus = useMemo(\n    () =>\n      (liveEdit || published) && (\n        <Box marginRight={1}>\n          <PublishStatus\n            disabled={showingRevision}\n            lastPublished={lastPublished}\n            lastUpdated={lastUpdated}\n            liveEdit={liveEdit}\n            collapsed={collapsed}\n          />\n        </Box>\n      ),\n    [collapsed, lastPublished, lastUpdated, liveEdit, published, showingRevision]\n  )\n\n  return (\n    <Flex align=\"center\" data-ui=\"DocumentSparkline\" ref={setRootFlexElement}>\n      {publishStatus}\n\n      <Flex align=\"center\" flex={1}>\n        {reviewButton}\n        {!collapsed && (\n          <Box marginLeft={3}>\n            <DocumentBadges />\n          </Box>\n        )}\n      </Flex>\n    </Flex>\n  )\n})\n","import React, {useMemo} from 'react'\nimport styled from 'styled-components'\nimport {Box, Flex} from '@sanity/ui'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentSparkline} from './sparkline/DocumentSparkline'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: React.Ref<HTMLDivElement>\n}\n\nconst DocumentActionsBox = styled(Box)`\n  min-width: 10em;\n  max-width: 16em;\n`\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef} = props\n  const {badges, historyController} = useDocumentPane()\n  const showingRevision = historyController.onOlderRevision()\n\n  return useMemo(\n    () => (\n      <Box paddingLeft={2} paddingRight={[2, 3]} paddingY={2}>\n        <Flex align=\"center\">\n          <Box flex={[1, 2]}>{badges && <DocumentSparkline />}</Box>\n\n          <DocumentActionsBox flex={1} marginLeft={[1, 3]} ref={actionsBoxRef}>\n            {showingRevision ? <HistoryStatusBarActions /> : <DocumentStatusBarActions />}\n          </DocumentActionsBox>\n        </Flex>\n      </Box>\n    ),\n    [actionsBoxRef, badges, showingRevision]\n  )\n}\n","import isHotkey from 'is-hotkey'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ActionStateDialog} from '../statusBar'\nimport {Pane, RenderActionCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentActionDescription, DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: React.Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nfunction KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<React.HTMLProps<HTMLDivElement>, 'height'>\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event)\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states]\n  )\n\n  return (\n    <Pane id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </Pane>\n  )\n}\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: React.Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = React.memo(\n  (props: DocumentActionShortcutsProps & React.HTMLProps<HTMLDivElement>) => {\n    const {actionsBoxElement, children, ...rest} = props\n    const {actions, editState} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          // @todo: get revision string\n          revision: undefined,\n        },\n      [editState]\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {({states}) => (\n          <KeyboardShortcutResponder\n            {...rest}\n            activeIndex={activeIndex}\n            actionsBoxElement={actionsBoxElement}\n            onActionStart={onActionStart}\n            states={states}\n          >\n            {children}\n          </KeyboardShortcutResponder>\n        )}\n      </RenderActionCollectionState>\n    )\n  }\n)\n\nDocumentActionShortcuts.displayName = 'DocumentActionShortcuts'\n","import {\n  BoundaryElementProvider,\n  Card,\n  Code,\n  DialogProvider,\n  DialogProviderProps,\n  Flex,\n  PortalProvider,\n  Stack,\n  Text,\n  useElementRect,\n} from '@sanity/ui'\nimport React, {memo, useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {Path} from '@sanity/types'\nimport {DocumentPaneNode} from '../../types'\nimport {usePaneRouter} from '../../components'\nimport {PaneFooter} from '../../components/pane'\nimport {usePaneLayout} from '../../components/pane/usePaneLayout'\nimport {useDeskTool} from '../../useDeskTool'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {DocumentOperationResults} from './DocumentOperationResults'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {ChangesPanel} from './changesPanel'\nimport {DocumentPanel} from './documentPanel'\nimport {DocumentActionShortcuts} from './keyboardShortcuts'\nimport {DocumentStatusBar} from './statusBar'\nimport {DocumentPaneProviderProps} from './types'\nimport {useDocumentPane} from './useDocumentPane'\nimport {\n  ChangeConnectorRoot,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  isDev,\n  useDocumentType,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useZIndex,\n} from 'sanity'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\nconst DOCUMENT_PANEL_MIN_WIDTH = 320\nconst DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\nconst CHANGES_PANEL_MIN_WIDTH = 320\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrow screens (< 512px).\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <DocumentPaneInner {...props} />\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'global',\n    })\n  }, [resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n              ? 'selected'\n              : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  if (options.type === '*' && !isLoaded) {\n    return <LoadingPane flex={2.5} minWidth={320} paneKey={paneKey} title=\"Loading document…\" />\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={<>The document was not found</>}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            The document type is not defined, and a document with the <code>{options.id}</code>{' '}\n            identifier could not be found.\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProvider\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={documentType}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink as any}\n        onEditReference={handleEditReference as any}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <InnerDocumentPane />\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProvider>\n  )\n}\n\nfunction usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {}\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n\nfunction InnerDocumentPane() {\n  const {\n    changesOpen,\n    documentType,\n    onFocus,\n    onPathOpen,\n    onHistoryOpen,\n    onKeyUp,\n    inspectOpen,\n    paneKey,\n    schemaType,\n    value,\n  } = useDocumentPane()\n  const {features} = useDeskTool()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const zOffsets = useZIndex()\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null\n  )\n  const footerRect = useElementRect(footerElement)\n  const footerH = footerRect?.height\n\n  const documentPanel = useMemo(\n    () => (\n      <DocumentPanel\n        footerHeight={footerH || null}\n        isInspectOpen={inspectOpen}\n        rootElement={rootElement}\n        setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n      />\n    ),\n    [footerH, rootElement, inspectOpen]\n  )\n\n  // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane.\n  // The portal element comes from `DocumentPanel`.\n  const footer = useMemo(\n    () => (\n      <PortalProvider __unstable_elements={{documentPanelPortalElement}}>\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <PaneFooter ref={setFooterElement}>\n            <DocumentStatusBar actionsBoxRef={setActionsBoxElement} />\n          </PaneFooter>\n        </DialogProvider>\n      </PortalProvider>\n    ),\n    [documentPanelPortalElement, zOffsets.portal]\n  )\n\n  const changesPanel = useMemo(() => {\n    if (!features.reviewChanges) return null\n    if (!changesOpen) return null\n\n    return (\n      <BoundaryElementProvider element={rootElement}>\n        <ChangesPanel />\n      </BoundaryElementProvider>\n    )\n  }, [changesOpen, features.reviewChanges, rootElement])\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus]\n  )\n\n  const children = useMemo(() => {\n    if (!schemaType) {\n      return (\n        <ErrorPane\n          flex={2.5}\n          minWidth={320}\n          paneKey={paneKey}\n          title={\n            <>\n              Unknown document type: <code>{documentType}</code>\n            </>\n          }\n          tone=\"caution\"\n        >\n          <Stack space={4}>\n            {documentType && (\n              <Text as=\"p\">\n                This document has the schema type <code>{documentType}</code>, which is not defined\n                as a type in the local content studio schema.\n              </Text>\n            )}\n\n            {!documentType && (\n              <Text as=\"p\">\n                This document does not exist, and no schema type was specified for it.\n              </Text>\n            )}\n\n            {isDev && value && (\n              <>\n                <Text as=\"p\">Here is the JSON representation of the document:</Text>\n                <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n                  <Code language=\"json\" size={[1, 1, 2]}>\n                    {JSON.stringify(value, null, 2)}\n                  </Code>\n                </Card>\n              </>\n            )}\n          </Stack>\n        </ErrorPane>\n      )\n    }\n\n    return (\n      <>\n        <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n          <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n            <StyledChangeConnectorRoot\n              data-testid=\"change-connector-root\"\n              isReviewChangesOpen={changesOpen}\n              onOpenReviewChanges={onHistoryOpen}\n              onSetFocus={onConnectorSetFocus}\n            >\n              {documentPanel}\n              {changesPanel}\n            </StyledChangeConnectorRoot>\n          </Flex>\n        </DialogProvider>\n        {footer}\n        <DocumentOperationResults />\n      </>\n    )\n  }, [\n    schemaType,\n    zOffsets.portal,\n    layoutCollapsed,\n    changesOpen,\n    onHistoryOpen,\n    onConnectorSetFocus,\n    documentPanel,\n    changesPanel,\n    footer,\n    paneKey,\n    documentType,\n    value,\n  ])\n\n  const currentMinWidth = changesOpen\n    ? DOCUMENT_PANEL_INITIAL_MIN_WIDTH + CHANGES_PANEL_MIN_WIDTH\n    : DOCUMENT_PANEL_INITIAL_MIN_WIDTH\n\n  const minWidth = changesOpen\n    ? DOCUMENT_PANEL_MIN_WIDTH + CHANGES_PANEL_MIN_WIDTH\n    : DOCUMENT_PANEL_MIN_WIDTH\n\n  return (\n    <DocumentActionShortcuts\n      actionsBoxElement={actionsBoxElement}\n      currentMinWidth={currentMinWidth}\n      data-testid=\"document-pane\"\n      flex={2.5}\n      id={paneKey}\n      minWidth={minWidth}\n      onKeyUp={onKeyUp}\n      rootRef={setRootElement}\n    >\n      {children}\n    </DocumentActionShortcuts>\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Stack, Text} from '@sanity/ui'\nimport React from 'react'\n\nexport function NoDocumentTypesScreen() {\n  return (\n    <Card height=\"fill\">\n      <Flex align=\"center\" height=\"fill\" justify=\"center\" padding={4} sizing=\"border\">\n        <Container width={0}>\n          <Card padding={4} radius={2} shadow={1} tone=\"caution\">\n            <Flex>\n              <Box>\n                <Text size={1}>\n                  <WarningOutlineIcon />\n                </Text>\n              </Box>\n              <Stack flex={1} marginLeft={3} space={3}>\n                <Text as=\"h1\" size={1} weight=\"bold\">\n                  No document types\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  Please define at least one document type in your schema.\n                </Text>\n                <Text as=\"p\" muted size={1}>\n                  <a\n                    href=\"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Learn how to add a document type &rarr;\n                  </a>\n                </Text>\n              </Stack>\n            </Flex>\n          </Card>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import {PortalProvider, useToast, useMediaIndex} from '@sanity/ui'\nimport React, {memo, Fragment, useState, useEffect, useCallback} from 'react'\nimport styled from 'styled-components'\nimport isHotkey from 'is-hotkey'\nimport {LOADING_PANE} from '../../constants'\nimport {LoadingPane, DeskToolPane} from '../../panes'\nimport {useResolvedPanes} from '../../structureResolvers'\nimport {PaneNode} from '../../types'\nimport {PaneLayout} from '../pane'\nimport {useDeskTool} from '../../useDeskTool'\nimport {NoDocumentTypesScreen} from './NoDocumentTypesScreen'\nimport {useRouter} from 'sanity/router'\nimport {useSchema, _isCustomDocumentTypeDefinition} from 'sanity'\n\ninterface DeskToolProps {\n  onPaneChange: (panes: Array<PaneNode | typeof LOADING_PANE>) => void\n}\n\nconst StyledPaneLayout = styled(PaneLayout)`\n  min-height: 100%;\n  min-width: 320px;\n`\n\nconst isSaveHotkey = isHotkey('mod+s')\n\n/**\n * @internal\n */\nexport const DeskTool = memo(function DeskTool({onPaneChange}: DeskToolProps) {\n  const {navigate} = useRouter()\n  const {push: pushToast} = useToast()\n  const schema = useSchema()\n  const mediaIndex = useMediaIndex()\n  const {layoutCollapsed, setLayoutCollapsed} = useDeskTool()\n  const {paneDataItems, resolvedPanes, routerPanes} = useResolvedPanes()\n\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n\n  const handleRootCollapse = useCallback(() => setLayoutCollapsed(true), [setLayoutCollapsed])\n  const handleRootExpand = useCallback(() => setLayoutCollapsed(false), [setLayoutCollapsed])\n\n  useEffect(() => {\n    // we check for length before emitting here to skip the initial empty array\n    // state from the `useResolvedPanes` hook. there should always be a root\n    // pane emitted on subsequent emissions\n    if (resolvedPanes.length) {\n      onPaneChange(resolvedPanes)\n    }\n  }, [onPaneChange, resolvedPanes])\n\n  // The pane layout is \"collapsed\" on small screens, and only shows 1 pane at a time.\n  // Remove pane siblings (i.e. split panes) as the pane layout collapses.\n  useEffect(() => {\n    if (mediaIndex > 1 || !layoutCollapsed) return\n    const hasSiblings = routerPanes.some((group) => group.length > 1)\n\n    if (!hasSiblings) return\n    const withoutSiblings = routerPanes.map((group) => [group[0]])\n\n    navigate({panes: withoutSiblings}, {replace: true})\n  }, [mediaIndex, navigate, layoutCollapsed, routerPanes])\n\n  useEffect(() => {\n    const handleGlobalKeyDown = (event: KeyboardEvent) => {\n      // Prevent `Cmd+S`\n      if (isSaveHotkey(event)) {\n        event.preventDefault()\n\n        pushToast({\n          closable: true,\n          id: 'auto-save-message',\n          status: 'info',\n          title: 'Your work is automatically saved!',\n          duration: 4000,\n        })\n      }\n    }\n\n    window.addEventListener('keydown', handleGlobalKeyDown)\n    return () => window.removeEventListener('keydown', handleGlobalKeyDown)\n  }, [pushToast])\n\n  const hasDefinedDocumentTypes = schema._original?.types.some(_isCustomDocumentTypeDefinition)\n\n  if (!hasDefinedDocumentTypes) {\n    return <NoDocumentTypesScreen />\n  }\n\n  return (\n    <PortalProvider element={portalElement || null}>\n      <StyledPaneLayout\n        flex={1}\n        height={layoutCollapsed ? undefined : 'fill'}\n        minWidth={512}\n        onCollapse={handleRootCollapse}\n        onExpand={handleRootExpand}\n      >\n        {paneDataItems.map(\n          ({\n            active,\n            childItemId,\n            groupIndex,\n            itemId,\n            key: paneKey,\n            pane,\n            index: paneIndex,\n            params: paneParams,\n            path,\n            payload,\n            siblingIndex,\n            selected,\n          }) => (\n            <Fragment key={`${pane === LOADING_PANE ? 'loading' : pane.type}-${paneIndex}`}>\n              {pane === LOADING_PANE ? (\n                <LoadingPane paneKey={paneKey} path={path} selected={selected} />\n              ) : (\n                <DeskToolPane\n                  active={active}\n                  groupIndex={groupIndex}\n                  index={paneIndex}\n                  pane={pane}\n                  childItemId={childItemId}\n                  itemId={itemId}\n                  paneKey={paneKey}\n                  params={paneParams}\n                  payload={payload}\n                  selected={selected}\n                  siblingIndex={siblingIndex}\n                />\n              )}\n            </Fragment>\n          )\n        )}\n      </StyledPaneLayout>\n      <div data-portal=\"\" ref={setPortalElement} />\n    </PortalProvider>\n  )\n})\n","import React, {useEffect, useMemo, useState} from 'react'\nimport {ErrorBoundary} from '@sanity/ui'\nimport {DeskToolOptions} from '../../types'\nimport {DeskToolProvider} from '../../DeskToolProvider'\nimport {setActivePanes} from '../../getIntentState'\nimport {IntentResolver} from './intentResolver'\nimport {StructureError} from './StructureError'\nimport {DeskTool} from './DeskTool'\nimport {useRouter} from 'sanity/router'\nimport {SourceProvider, useWorkspace, Tool, isRecord} from 'sanity'\n\nconst EMPTY_RECORD = {}\n\ninterface DeskToolBoundaryProps {\n  tool: Tool<DeskToolOptions>\n}\n\nexport function DeskToolBoundary({tool: {options}}: DeskToolBoundaryProps) {\n  const {unstable_sources: sources} = useWorkspace()\n  const [firstSource] = sources\n  const {source, defaultDocumentNode, structure} = options || {}\n\n  const {state: routerState} = useRouter()\n  const intent = useMemo(() => {\n    const intentName = typeof routerState.intent === 'string' ? routerState.intent : undefined\n    const params = isRecord(routerState.params) ? routerState.params : EMPTY_RECORD\n    const payload = routerState.payload\n\n    return intentName ? {intent: intentName, params, payload} : undefined\n  }, [routerState])\n\n  // Set active panes to blank on mount and unmount\n  useEffect(() => {\n    setActivePanes([])\n    return () => setActivePanes([])\n  }, [])\n\n  const [{error}, setError] = useState<{error: unknown}>({error: null})\n  // this re-throws if the error it catches is not a PaneResolutionError\n  if (error) return <StructureError error={error} />\n\n  return (\n    <ErrorBoundary onCatch={setError}>\n      <SourceProvider name={source || firstSource.name}>\n        <DeskToolProvider defaultDocumentNode={defaultDocumentNode} structure={structure}>\n          {/* when an intent is found, we render the intent resolver component */}\n          {/* which asynchronously resolves the intent then navigates to it */}\n          {intent ? <IntentResolver {...intent} /> : <DeskTool onPaneChange={setActivePanes} />}\n        </DeskToolProvider>\n      </SourceProvider>\n    </ErrorBoundary>\n  )\n}\n"],"names":["Delay","children","ms","ready","setReady","useState","useEffect","timeoutId","setTimeout","clearTimeout","jsx","Fragment","RenderActionCollectionState","props","actions","actionProps","onActionComplete","GetHookCollectionState","onReset","hooks","args","RenderBadgeCollectionState","badges","badgeProps","rest","emptyArray","PaneRouterProvider","flatIndex","index","params","payload","siblingIndex","navigate","navigateIntent","useRouter","routerState","useRouterState","routerPaneGroups","useMemo","panes","groupIndex","modifyCurrentGroup","useCallback","modifier","currentGroup","currentItem","nextGroup","nextPanes","slice","nextRouterState","setPayload","nextPayload","siblings","item","setParams","nextParams","handleEditReference","id","parentRefPath","type","template","pathToString","toString","ctx","hasGroupSiblings","length","groupLength","routerPanesState","ChildLink","BackLink","ReferenceChildLink","ParameterizedLink","replaceCurrent","opts","closeCurrent","filter","sibling","duplicateCurrent","options","duplicatedItem","setView","viewId","restParams","omit","view","PaneRouterContext","Provider","value","_calcPaneResize","cache","left","right","deltaX","_a","_b","sum","flex","width","leftMinWidth","minWidth","PANE_DEFAULT_MIN_WIDTH","rightMinWidth","leftMaxWidth","Math","min","maxWidth","Infinity","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","rootElement","el","path","e","parentElement","Array","from","childNodes","indexOf","unshift","EMPTY_PATH","_sortElements","elements","map","WeakMap","element","set","_sortByElementPath","a","b","get","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","expandedElement","resizeDataMap","Map","resizing","collapse","add","_notifyObservers","expand","delete","mount","original","push","idx","splice","resize","leftElement","_c","_d","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","currentMinWidth","currentMaxWidth","setRootElement","nextRootElement","setRootWidth","nextRootWidth","subscribe","observer","_elements","dataMap","lastElement","collapsedWidth","PANE_COLLAPSED_WIDTH","remaingWidth","isLast","userCollapsed","has","sizeCollapsed","collapsed","resizeData","data","PaneLayout","onCollapse","onExpand","restProps","controller","rootRect","useElementRect","state","setState","paneLayout","PaneLayoutContext","Root","ref","PaneResolutionError","Error","constructor","message","context","helpId","cause","randomIdCache","assignId","obj","cachedValue","nanoid","bindCache","memoBind","methodKey","boundMethods","bound","method","bind","isPromise","thing","then","isSerializable","isRecord","serialize","rethrowWithPaneResolutionErrors","next","unresolvedPane","wrapWithPublishReplay","pipe","publishReplay","refCount","createPaneResolver","middleware","resolvePane","isObservable","switchMap","result","observableOf","resolveIntent","resolvedPaneCache","memoize","nextFn","key","join","cachedResolvedPane","fallbackEditorPanes","traverse","currentId","intent","parent","levelIndex","structureContext","targetId","schemaTypeName","otherParams","splitIndex","resolvedPane","firstValueFrom","depthIndex","canHandleIntent","call","pane","child","items","Promise","all","nextLevelIndex","resolve","_id","flat","matchingPanes","rootPaneNode","closestPaneToRoot","useDeskTool","deskTool","useContext","DeskToolContext","fallbackEditorChild","nodeId","replace","resolveDocumentNode","defaultDocumentBuilder","schemaType","documentId","title","initialValueTemplate","hashContext","JSON","stringify","parentId","serializeOptionsIndex","serializeOptions","serializeOptionsPath","hashResolvedPaneMeta","meta","normalized","routerPaneSibling","paneNode","resolvePaneTree","flattenedRouterPanes","current","resolvedPaneMeta","loadingPanes","restIndex","loadingPanePath","_","currentIndex","loadingPane","of","nextStream","startsWith","concat","nextResolvedPanes","console","warn","generateHelpUrl","createResolvedPaneNodeStream","routerPanesStream","initialCacheState","cacheKeysByFlatIndex","NEVER","resolvedPanes$","rawRouterPanes","routerPanes","flatMap","routerPaneGroup","startWith","pairwise","prev","curr","prevValue","currValue","isEqual","default","diffIndex","scan","acc","beforeDiffIndex","afterDiffIndex","keysToKeep","keySet","keysToDelete","cacheKeySet","nextPane","prevPane","distinctUntilChanged","nextValue","useRouterPanesStream","routerStateSubject","ReplaySubject","routerPanes$","asObservable","_routerState","useResolvedPanes","error","setError","setData","paneDataItems","resolvedPanes","reduce","groupsLen","itemId","paneDataItem","active","childItemId","LOADING_PANE","selected","subscription","unsubscribe","Redirect","Card","height","jsxs","Flex","align","direction","justify","Spinner","muted","Box","marginTop","Text","size","ensureDocumentIdAndType","documentStore","uuid","resolvedType","resolveTypeForDocument","IntentResolver","paramsProp","payloadProp","useDocumentStore","useUnique","nextRouterPanes","setNextRouterPanes","idParam","typeParam","cancelledRef","getNextRouterPanes","catch","PathSegment","styled","span","formatStack","stack","RegExp","window","location","host","StructureError","showStack","SerializeError","includes","handleReload","reload","overflow","padding","sizing","tone","Container","Heading","as","radius","shadow","Stack","space","Label","Code","segment","href","rel","target","Button","text","icon","SyncIcon","onClick","UnknownPane","isSelected","paneKey","Pane","PaneHeader","PaneContent","getWaitMessages","thresholds","isDev","src","merge","mapTo","delay","DEFAULT_MESSAGE","Content","LoadingPane","memo","messageProp","resolvedMessage","split","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","content","displayName","paneMap","component","lazy","require","document","documentList","list","DeskToolPane","PaneComponent","Suspense","fallback","isActive","prevParams","prevPayload","keys","Object","ErrorPane","paddingX","paddingY","getOpErrorTitle","op","getOpSuccessTitle","IGNORE_OPS","DocumentOperationResults","pushToast","useToast","documentType","useDocumentPane","event","useDocumentOperationEvent","prevEvent","useRef","closable","duration","status","description","getHistoryMenuItem","features","hasValue","changesOpen","reviewChanges","action","RestoreIcon","isDisabled","getInspectItem","BinaryDocumentIcon","shortcut","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","Boolean","fn","isSanityDocument","_type","usePreviewUrl","setPreviewUrl","resolveProductionUrl","useSource","value$","useAsObservable","debounceTime","catchError","getInitialValueTemplateOpts","templates","panePayload","structureNodeTemplate","templateName","urlTemplate","typeTemplates","t","templateParams","emptyObject","DocumentPaneProvider","client","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","schema","useSchema","useTemplates","documentActions","documentBadges","unstable_languageFilter","languageFilterResolver","historyStore","useHistoryStore","presenceStore","usePresenceStore","paneRouter","usePaneRouter","menuItemGroups","views","viewsProp","paneOptions","documentIdRaw","getPublishedId","paneParams","templateParameters","initialValueRaw","useInitialValue","initialValue","patch","useDocumentOperation","editState","useEditState","validation","validationRaw","useValidationStatus","connectionState","useConnectionState","draft","published","languageFilter","focusPath","setFocusPath","pathFromString","activeViewId","timeline","getTimeline","publishedId","enableTrace","timelineMode","setTimelineMode","historyController","useMemoObservable","getTimelineController","setRange","since","rev","changesPanelActive","presence","setPresence","documentPresence","nextPresence","menuItems","inspectOpen","inspect","compareValue","sinceAttributes","viewOlderVersion","onOlderRevision","displayed","setTimelineRange","newSince","newRev","handleFocus","nextFocusPath","setLocation","lastActiveAt","Date","toISOString","handleBlur","blurredPath","patchRef","execute","toMutationPatches","patches","handleChange","handleHistoryClose","handleHistoryOpen","handlePaneClose","handlePaneSplit","toggleInspect","toggle","handleMenuAction","open","handleKeyUp","isHotkey","preventDefault","stopPropagation","handleInspectClose","openPath","onSetOpenPath","fieldGroupState","onSetFieldGroupState","collapsedPaths","onSetCollapsedPath","collapsedFieldSets","onSetCollapsedFieldSets","handleOnSetCollapsedPath","prevState","setAtPath","handleOnSetCollapsedFieldSet","handleSetActiveFieldGroup","groupName","requiredPermission","_createdAt","liveEdit","docId","docPermissionsInput","getDraftId","permissions","isPermissionsLoading","useDocumentValuePermissions","permission","revTime","isNonExistent","readOnly","hasNoPermission","granted","updateActionDisabled","isActionEnabled","createActionDisabled","reconnecting","formState","useFormState","comparisonValue","formStateRef","handleOpenPath","ops","getExpandOperations","forEach","documentPane","onBlur","onChange","onFocus","onPathOpen","onHistoryClose","onHistoryOpen","onInspectClose","onKeyUp","onMenuAction","onPaneClose","onPaneSplit","onSetActiveFieldGroup","onSetCollapsedFieldSet","DocumentPaneContext","TIMELINE_LABELS","create","discardDraft","initial","editDraft","editLive","publish","unpublish","TIMELINE_ICON_COMPONENTS","AddCircleIcon","TrashIcon","CloseIcon","EditIcon","PublishIcon","UnpublishIcon","formatTimelineEventLabel","getTimelineEventIconComponent","sinceTimelineProps","topSelection","bottomSelection","disabledBeforeSelection","revTimelineProps","UserAvatarStack","maxLength","userIds","AvatarStack","userId","UserAvatar","user","withTooltip","IconWrapper","theme","borderColor","sanity","color","base","skeleton","css","MenuItem","isHovered","selectedState","button","primary","enabled","bg","fg","IconBox","EventLabel","TimestampBox","rem","TIMELINE_ITEM_EVENT_TONE","withinSelection","TimelineItem","isSelectionBottom","isSelectionTop","onSelect","timestamp","chunk","iconComponent","authorUserIds","authors","timeAgo","useTimeAgo","minimal","formattedTimestamp","parsedDate","formattedDate","format","isWithinSelection","setHovered","handleClick","evt","pressed","disabled","Tooltip","portal","placement","fallbackPlacements","onMouseEnter","onMouseLeave","createElement","margin","weight","StackWrapper","MenuWrapper","Menu","LOAD_MORE_OFFSET","Timeline","onLoadMore","rootRef","listRef","loadingElement","setLoadingElement","checkIfLoadIsNeeded","rootEl","offsetHeight","scrollTop","bottomPosition","isVisible","offsetTop","requestAnimationFrame","onScroll","chunkCount","mapChunks","endTimestamp","reachedEarliestEntry","Popover","TimelineMenu","mode","setOpen","setButton","menuContent","setMenuContent","handleOpen","handleClose","handleClickOutside","handleGlobalKeyDown","focus","useClickOutside","useGlobalKeyDown","selectRev","revChunk","sinceId","revId","findRangeForNewRev","selectSince","sinceChunk","findRangeForNewSince","loadMoreHistory","setLoadMore","realRevChunk","sinceTime","agoSuffix","revLabel","upperFirst","sinceLabel","openLabel","buttonLabel","constrainSize","fontSize","iconRight","SelectIcon","LoadingContent","collectLatestAuthorAnnotations","diff","authorMap","visitDiff","annotation","author","previous","values","Scroller","ScrollContainer","ChangesPanel","usePane","scrollRef","historyState","selectionState","loading","currentObjectDiff","isComparingCurrent","documentContext","React","FieldWrapper","ChangeFieldWrapper","rootDiff","changeAnnotations","style","borderLeft","subActions","paddingRight","DiffTooltip","annotations","tabs","BoundaryElementProvider","NoChanges","DocumentChangeContext","ChangeList","useDeskToolSetting","namespace","defaultValue","settingsStore","useSettingsStore","setValue","deskToolSettings","forNamespace","settings","forKey","listen","newValue","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","HLRU","isExpanded","keyPath","cached","isArray","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","selectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","JSONInspectorWrapper","div","fonts","code","family","sizes","lineHeight","syntax","property","constant","string","boolean","number","Search","query","TextInput","SearchIcon","placeholder","InspectDialog","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","find","setParsedViewMode","setRawViewMode","Dialog","header","DocTitle","onClose","onClickOutside","position","bottom","zIndex","TabList","Tab","label","TabPanel","outline","JSONInspector","search","language","tabIndex","onKeyDown","onDoubleClick","TextOneLine","ReferenceChangedBanner","_e","_f","documentPreviewStore","useDocumentPreviewStore","routerReferenceId","parentGroup","parentSibling","hasHistoryOpen","referenceInfo","parentRefPathSegment","keyedSegmentIndex","findIndex","p","unstable_observePathsDocumentPair","availability","refValue","pathGet","snapshot","_ref","handleReloadReference","shouldHide","available","WarningOutlineIcon","marginLeft","PermissionCheckBanner","currentUser","useCurrentUser","plural","roles","r","name","ReadOnlyIcon","array","sep","usePrevious","LONG_ENOUGH_BUT_NOT_TOO_LONG","useConditionalToast","toast","wasEnabled","ev","FormView","hidden","margins","useDocumentPresence","patchChannel","createPatchChannel","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","formRef","focusFirstDescendant","paddingTop","paddingBottom","PresenceOverlay","onSubmit","FormBuilder","__internal_patchChannel","changed","focused","groups","members","onFieldGroupSelect","onPathBlur","onPathFocus","onSetFieldSetCollapsed","onSetPathCollapsed","mutations","mut","fromMutationPatches","origin","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","tabPanelId","DocumentHeaderTab","BUTTON_PROPS","ErrorOutlineIcon","warning","info","InfoOutlineIcon","ValidationMenu","boundaryElement","isOpen","useId","hasValidationMarkers","hasErrorMarkers","some","isValidationErrorMarker","hasWarningMarkers","isValidationWarningMarker","hasInfoMarkers","isValidationInfoMarker","buttonProps","MenuButton","menu","ValidationList","popover","preventOverflow","DocumentHeaderTitle","documentValue","subscribed","useValuePreview","isActionButton","showAsAction","isMenuButton","negate","DocumentPanelHeader","forwardRef","contextMenuItems","isValidationOpen","setValidationOpen","showTabs","showVersionMenu","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","backButton","ArrowLeftIcon","Inline","languageFilterComponent","PaneContextMenuButton","itemGroups","onAction","SplitVerticalIcon","$disabled","DocumentPanel","footerHeight","isInspectOpen","setDocumentPanelPortalElement","layoutCollapsed","usePaneLayout","parentPortal","usePortal","headerElement","setHeaderElement","headerRect","portalRef","documentScrollElement","setDocumentScrollElement","activeView","portalElement","splitPanes","formViewHidden","activeViewNode","historical","scrollTo","inspectDialog","PortalProvider","__unstable_elements","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","ConfirmDialogContent","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","isTopLayer","useLayer","setElement","borderTop","Grid","columns","gap","ModalDialog","dialogId","footer","LegacyLayerProvider","zOffset","__unstable_hideCloseButton","showCloseButton","PopoverDialog","PopoverDialogContent","ActionStateDialog","modalId","unknownModal","ActionMenuButton","actionStates","idPrefix","buttonRef","actionIndex","setActionIndex","setReferenceElement","handleAction","popoverProps","currentAction","ChevronDownIcon","actionState","ActionMenuListItem","onHandle","tooltipContent","marginRight","isValidElement","isValidElementType","Hotkeys","String","s","toUpperCase","DocumentStatusBarActionsInner","showMenu","states","firstActionState","menuActionStates","buttonElement","setButtonElement","toLowerCase","LayerProvider","DocumentStatusBarActions","HistoryStatusBarActions","revision","historyActions","HistoryRestoreAction","BADGE_TONES","success","danger","DocumentBadgesInner","badge","Badge","whiteSpace","DocumentBadges","PublishStatus","lastPublished","lastUpdated","lastPublishedTimeAgo","lastPublishedTime","lastUpdatedTimeAgo","lastUpdatedTime","PlayIcon","StyledMotionPath","motion","Circle","circle","fill","cx","cy","strokeWidth","Arrows","d","Checkmark","Edit","rotateAnimation","keyframes","RotateGroup","g","root","syncing","scale","transition","saved","changes","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","edit","AnimatedStatusIcon","viewBox","stroke","variants","animate","ReviewButton","ReviewChangesButton","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentSparkline","syncState","useSyncState","_updatedAt","showingRevision","rootFlexElement","setRootFlexElement","rootFlexRect","setStatus","isSyncing","timerId","useLayoutEffect","reviewButton","publishStatus","DocumentActionsBox","DocumentStatusBar","actionsBoxRef","paddingLeft","KeyboardShortcutResponder","actionsBoxElement","activeIndex","onActionStart","activeAction","handleKeyDown","matchingStates","matchingState","DocumentActionShortcuts","setActiveIndex","onComplete","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","CHANGES_PANEL_MIN_WIDTH","DIALOG_PROVIDER_POSITION","StyledChangeConnectorRoot","ChangeConnectorRoot","DocumentPane","parentSourceName","SourceProvider","source","DocumentPaneInner","resolveNewDocumentOptions","usePaneOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","providerProps","mergeDocumentType","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","EditReferenceLinkComponent","onEditReference","initialValueTemplateItems","InnerDocumentPane","zOffsets","useZIndex","footerElement","setFooterElement","setActionsBoxElement","documentPanelPortalElement","footerRect","footerH","documentPanel","DialogProvider","PaneFooter","changesPanel","onConnectorSetFocus","isReviewChangesOpen","onOpenReviewChanges","onSetFocus","NoDocumentTypesScreen","StyledPaneLayout","isSaveHotkey","DeskTool","onPaneChange","mediaIndex","useMediaIndex","setLayoutCollapsed","setPortalElement","handleRootCollapse","handleRootExpand","hasSiblings","group","withoutSiblings","addEventListener","removeEventListener","hasDefinedDocumentTypes","_original","types","_isCustomDocumentTypeDefinition","paneIndex","EMPTY_RECORD","DeskToolBoundary","tool","unstable_sources","sources","useWorkspace","firstSource","defaultDocumentNode","structure","intentName","setActivePanes","ErrorBoundary","onCatch","DeskToolProvider"],"mappings":"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"}