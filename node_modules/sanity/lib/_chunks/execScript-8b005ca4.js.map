{"version":3,"file":"execScript-8b005ca4.js","sources":["../../src/_internal/cli/actions/exec/execScript.ts"],"sourcesContent":["import {spawn} from 'child_process'\nimport fs from 'fs/promises'\nimport path from 'path'\nimport type {CliCommandAction, CliCommandArguments} from '@sanity/cli'\nimport yargs from 'yargs/yargs'\nimport {hideBin} from 'yargs/helpers'\nimport readPkgUp from 'read-pkg-up'\n\ninterface ExecFlags {\n  'with-user-token'?: boolean\n  'mock-browser-env'?: boolean\n}\n\nasync function parseCliFlags(args: CliCommandArguments<ExecFlags>) {\n  const flags = await yargs(hideBin(args.argv || process.argv).slice(2))\n    .option('with-user-token', {type: 'boolean', default: false})\n    .option('mock-browser-env', {type: 'boolean', default: false}).argv\n\n  return {\n    ...flags,\n    script: args.argsWithoutOptions[0],\n  }\n}\n\nconst execScript: CliCommandAction<ExecFlags> = async function execScript(args, context) {\n  // Reparsing CLI flags for better control of binary flags\n  const {withUserToken, mockBrowserEnv, script} = await parseCliFlags(args)\n  const {workDir} = context\n\n  const scriptPath = path.resolve(script || '')\n  if (!script) {\n    throw new Error('SCRIPT must be provided. `sanity exec <script>`')\n  }\n\n  if (!(await fs.stat(scriptPath).catch(() => false))) {\n    throw new Error(`${scriptPath} does not exist`)\n  }\n\n  const sanityPkgPath = (await readPkgUp({cwd: __dirname}))?.path\n  if (!sanityPkgPath) {\n    throw new Error('Unable to resolve `sanity` module root')\n  }\n\n  const sanityDir = path.dirname(sanityPkgPath)\n  const threadsDir = path.join(sanityDir, 'lib', '_internal', 'cli', 'threads')\n  const esbuildPath = path.join(threadsDir, 'esbuild.js')\n  const browserEnvPath = path.join(threadsDir, 'registerBrowserEnv.js')\n  const configClientPath = path.join(threadsDir, 'configClient.js')\n\n  if (!(await fs.stat(esbuildPath).catch(() => false))) {\n    throw new Error('`sanity` module build error: missing threads')\n  }\n\n  const baseArgs = mockBrowserEnv ? ['-r', browserEnvPath] : ['-r', esbuildPath]\n  const tokenArgs = withUserToken ? ['-r', configClientPath] : []\n\n  const nodeArgs = [...baseArgs, ...tokenArgs, scriptPath, ...args.extraArguments]\n\n  const proc = spawn(process.argv[0], nodeArgs, {\n    stdio: 'inherit',\n    env: {\n      // eslint-disable-next-line no-process-env\n      ...process.env,\n      SANITY_BASE_PATH: workDir,\n    },\n  })\n  proc.on('close', process.exit)\n}\n\nexport default execScript\n"],"names":["parseCliFlags","args","flags","yargs","hideBin","argv","process","slice","option","type","default","script","argsWithoutOptions","execScript","context","_a","withUserToken","mockBrowserEnv","workDir","scriptPath","path","resolve","Error","fs","stat","catch","sanityPkgPath","readPkgUp","cwd","__dirname","sanityDir","dirname","threadsDir","join","esbuildPath","browserEnvPath","configClientPath","baseArgs","tokenArgs","nodeArgs","extraArguments","proc","spawn","stdio","env","SANITY_BASE_PATH","on","exit"],"mappings":"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"}